(undo-tree-save-format-version . 1)
"f5ecf821a9b60216863318264f056b3077658542"
[nil nil nil nil (25271 2696 33687 766000) 0 nil]
([nil nil ((nil rear-nonsticky nil 229 . 230) (#("
" 0 1 (fontified nil)) . -248) (228 . 249) 227 (t 25270 62733 603140 193000)) nil (25271 2696 33682 458000) 0 nil])
([nil nil ((#("size" 0 4 (face font-lock-variable-name-face fontified t)) . 242)) nil (25271 2696 33676 242000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -245) (undo-tree-id304 . -1) 246 (242 . 246)) nil (25271 2696 33671 912000) 0 nil])
([nil nil ((229 . 231) (#("	" 0 1 (rear-nonsticky t fontified nil)) . 229) (261 . 262) (246 . 261) (#(";" 0 1 (fontified t)) . -246) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) 247) nil (25271 2696 33662 973000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . -233) (undo-tree-id300 . -2) (229 . 233) 231) nil (25271 2696 33650 471000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -230) (undo-tree-id299 . -2) (229 . 230) 231) nil (25271 2696 33643 836000) 0 nil])
([nil nil ((810 . 813) (808 . 810) (#("  " 0 2 (fontified nil)) . 807) (undo-tree-id298 . -2) (806 . 810)) nil (25271 2696 33636 223000) 0 nil])
([nil nil ((325 . 327) (#("    " 0 4 (fontified nil)) . 325) (undo-tree-id280 . -4) (329 . 330) (325 . 329) (#("    " 0 4 (fontified nil)) . 324) (undo-tree-id281 . -4) (323 . 329) (320 . 322) (#("    " 0 4 (fontified nil)) . 320) (undo-tree-id282 . -4) (324 . 325) (319 . 324) (#("[" 0 1 (fontified t)) . -319) (undo-tree-id283 . -1) 320 (319 . 320) (318 . 319) (300 . 318) (299 . 300) (287 . 299) (284 . 287) (#(" " 0 1 (fontified t)) . -284) (undo-tree-id284 . -1) (#("A" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -285) (undo-tree-id285 . -1) 286 (#("d" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -286) (undo-tree-id286 . -1) (#("d" 0 1 (face font-lock-type-face fontified nil)) . -287) (undo-tree-id287 . -1) (#("A" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -288) (undo-tree-id288 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -289) (undo-tree-id289 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -290) (undo-tree-id290 . -1) (#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -291) (undo-tree-id291 . -1) (#("i" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -292) (undo-tree-id292 . -1) (#("b" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -293) (undo-tree-id293 . -1) (#("u" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -294) (undo-tree-id294 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -295) (undo-tree-id295 . -1) (#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -296) (undo-tree-id296 . -1) 297 (284 . 297) (283 . 284) (276 . 283) (264 . 266) (#("        " 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 264) (281 . 282) (273 . 281) (266 . 273) (264 . 266) (#("  " 0 2 (fontified nil)) . 263) (undo-tree-id297 . -2) (262 . 266)) nil (25271 2696 33616 598000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -329) (undo-tree-id279 . -2) 331 (328 . 331)) nil (25271 2696 33560 865000) 0 nil])
([nil nil ((262 . 265) (#("
" 0 1 (fontified t)) . -262) (undo-tree-id275 . -1) (#(" " 0 1 (fontified t)) . -263) (undo-tree-id276 . -1) 264 (263 . 264) (#("w" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -263) (undo-tree-id277 . -1) 264 (263 . 264) (#("w" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -263) (undo-tree-id278 . -1) 264 (263 . 264)) nil (25271 2696 33551 297000) 0 nil])
([nil nil ((306 . 307) (294 . 306) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -294) (undo-tree-id267 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -295) (undo-tree-id268 . -1) (#("b" 0 1 (face font-lock-variable-name-face fontified t)) . -296) (undo-tree-id269 . -1) (#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -297) (undo-tree-id270 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -298) (undo-tree-id271 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -299) (undo-tree-id272 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -300) (undo-tree-id273 . -1) 301 (285 . 301) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -285) (undo-tree-id274 . -1) 286 (284 . 286) (283 . 284) (277 . 283) (276 . 277) (270 . 276) (263 . 265) (267 . 268) (#("        " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 263) (274 . 275) (264 . 274)) nil (25271 2696 33529 367000) 0 nil])
([nil nil ((305 . 306)) nil (25271 2696 33499 126000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -310) (undo-tree-id266 . -2) 312 (309 . 312) 305) nil (25271 2696 33494 796000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . -267) (undo-tree-id265 . -2) (263 . 267) 265) nil (25271 2696 33487 183000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -264) (undo-tree-id264 . -2) (263 . 264) 265) nil (25271 2696 33479 640000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 309) (undo-tree-id263 . 1)) nil (25271 2696 33473 75000) 0 nil])
([nil nil ((309 . 310)) nil (25271 2696 33466 929000) 0 nil])
([nil nil ((1033 . 1035) (985 . 987) ("	" . 985) (940 . 942) ("	" . 940) (929 . 931) ("	" . 929) (903 . 907) ("		" . 903) (871 . 876) ("				      " . 871) (817 . 821) (#("		" 0 2 (fontified t)) . 817) (783 . 787) (#("		" 0 2 (fontified t)) . 783) (745 . 748) (#("			     " 0 8 (fontified t)) . 745) (718 . 721) (#("			     " 0 8 (fontified t)) . 718) (683 . 687) (#("		" 0 2 (fontified t)) . 683) (642 . 646) (#("		" 0 2 (fontified t)) . 642) (613 . 617) (#("		" 0 2 (fontified t)) . 613) (584 . 588) (#("		" 0 2 (fontified t)) . 584) (551 . 555) (#("		" 0 2 (fontified t)) . 551) (502 . 506) (#("		" 0 2 (fontified t)) . 502) (468 . 472) (#("		" 0 2 (fontified t)) . 468) (463 . 465) (#("	" 0 1 (fontified t)) . 463) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (409 . 411) (#("	" 0 1 (fontified t)) . 409) (388 . 390) (#("	" 0 1 (fontified t)) . 388) (266 . 268) (#("	" 0 1 (fontified t)) . 266) (231 . 233) (#("	" 0 1 (fontified t)) . 231) (210 . 212) (#("	" 0 1 (fontified t)) . 210) (177 . 179) (#("	" 0 1 (fontified t)) . 177) 169) nil (25271 2696 33452 402000) 0 nil])
([nil nil ((nil rear-nonsticky nil 378 . 379) (#("
" 0 1 (fontified nil)) . -409) (374 . 410)) nil (25271 2696 33419 88000) 0 nil])
([nil nil ((nil rear-nonsticky nil 413 . 414) (#("
" 0 1 (fontified nil)) . -509) (409 . 510) 375) nil (25271 2696 33413 850000) 0 nil])
([nil nil ((#("    glBufferData(GL_ARRAY_BUFFER, 
" 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t) 4 16 (fontified t) 16 17 (fontified t) 17 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t)) . 375) (undo-tree-id257 . -35) (undo-tree-id258 . -4) (undo-tree-id259 . -4) 379) nil (25271 2696 33407 704000) 0 nil])
([nil nil ((nil rear-nonsticky nil 378 . 379) (#("
" 0 1 (fontified nil)) . -455) (374 . 456)) nil (25271 2696 33398 136000) 0 nil])
([nil nil ((457 . 461) (#("    " 0 3 (fontified nil) 3 4 (fontified nil rear-nonsticky t)) . 456) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (460 . 461)) nil (25271 2696 33391 431000) 0 nil])
([nil nil ((469 . 472)) nil (25271 2696 33370 549000) 0 nil])
([nil nil ((530 . 531) (527 . 530) (nil fontified t 526 . 527) (nil fontified t 525 . 526) (nil fontified t 524 . 525) (#("num" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -513) (516 . 530) 516 (512 . 516) (nil fontified t 511 . 512) (nil fontified t 510 . 511) (nil fontified t 509 . 510) (nil fontified t 508 . 509) (#("offs" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -494) (498 . 516) 498 (494 . 498) (#("o" 0 1 (fontified t)) . -494) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("f" 0 1 (fontified t)) . -495) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("f" 0 1 (fontified t)) . -496) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("s" 0 1 (fontified t)) . -497) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("e" 0 1 (fontified t)) . -498) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("t" 0 1 (fontified t)) . -499) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("_" 0 1 (fontified t)) . -500) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#("a" 0 1 (fontified t)) . -501) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("a" 0 1 (fontified t)) . -502) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("t" 0 1 (fontified t)) . -503) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("r" 0 1 (fontified t)) . -504) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("i" 0 1 (fontified t)) . -505) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#("b" 0 1 (fontified t)) . -506) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (#("u" 0 1 (fontified t)) . -507) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (#("t" 0 1 (fontified nil)) . -508) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#("e" 0 1 (fontified t)) . -509) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("s" 0 1 (fontified t)) . -510) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("_" 0 1 (fontified t)) . -511) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (#("[" 0 1 (fontified t)) . -512) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) 513 (494 . 513)) nil (25271 2696 33326 60000) 0 nil])
([nil nil ((#("iterations" 0 10 (fontified t)) . 517) (undo-tree-id0 . -10)) nil (25271 2696 40287 594000) 0 nil])
([nil nil ((nil fontified t 527 . 528) (nil fontified t 526 . 527) (nil fontified t 525 . 526) (nil fontified t 521 . 525) (#("num_att" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -513) (520 . 535) 520 (517 . 520)) nil (25271 2840 862111 281000) 0 nil] [nil nil ((537 . 538) (nil fontified t 523 . 537) (#("num_iterations" 0 14 (fontified t)) . -513) (527 . 551) 527 (nil fontified t 523 . 527) (#("num_" 0 4 (fontified t)) . -513) (517 . 531) 517) ((#("num_iterations" 0 10 (fontified nil) 10 14 (fontified nil)) . 517) (undo-tree-id305 . -14) (undo-tree-id306 . -14) (undo-tree-id307 . -14) (undo-tree-id308 . -14) (513 . 517) (nil fontified nil 523 . 527) (#("num_iterations*size*size" 0 10 (fontified nil) 10 24 (fontified nil)) . 527) (undo-tree-id309 . -24) (undo-tree-id310 . -24) (undo-tree-id311 . -24) (undo-tree-id312 . -24) (513 . 527) (nil fontified nil 523 . 537) (#("u" 0 1 (fontified t)) . 537)) (25271 2696 32752 456000) 0 nil])
([nil nil ((643 . 645) (nil fontified t 642 . 643) (nil fontified t 641 . 642) (nil fontified t 640 . 641) (#("off" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -625) (628 . 646) 628 (625 . 628) (620 . 625) (619 . 620) (617 . 619) (nil fontified t 616 . 617) (nil fontified t 615 . 616) (nil fontified t 614 . 615) (nil fontified t 613 . 614) (nil fontified t 612 . 613) (nil fontified t 611 . 612) (nil fontified t 610 . 611) (nil fontified t 609 . 610) (nil fontified t 608 . 609) (nil fontified t 607 . 608) (nil fontified t 606 . 607) (#("num_attribu" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . -602) (613 . 628) 613 (611 . 613) (602 . 611) (#("o" 0 1 (fontified t)) . -602) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("f" 0 1 (fontified t)) . -603) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (#("f" 0 1 (fontified t)) . -604) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (#("s" 0 1 (fontified t)) . -605) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#("e" 0 1 (fontified t)) . -606) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (#("t" 0 1 (fontified nil)) . -607) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (#("_" 0 1 (fontified t)) . -608) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (#("a" 0 1 (fontified t)) . -609) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (#("t" 0 1 (fontified t)) . -610) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (#("t" 0 1 (fontified t)) . -611) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (#("r" 0 1 (fontified t)) . -612) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (#("i" 0 1 (fontified t)) . -613) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (#("b" 0 1 (fontified t)) . -614) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (#("u" 0 1 (fontified t)) . -615) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (#("t" 0 1 (fontified t)) . -616) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (#("e" 0 1 (fontified t)) . -617) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (#("s" 0 1 (fontified t)) . -618) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) 619 (602 . 619) (597 . 602)) nil (25271 2840 862045 980000) 0 nil])
nil
([nil nil ((#("p" 0 1 (fontified t)) . -645) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) 646 (645 . 646) (#("[" 0 1 (fontified t)) . -645) (undo-tree-id415 . -1) (undo-tree-id416 . -1) 646 (645 . 646)) nil (25271 2840 861499 544000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -699) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) 700 (699 . 700) (698 . 699) (697 . 698) (696 . 697) (690 . 696) (689 . 690) (683 . 689) (682 . 683) (677 . 682) (#("i" 0 1 (fontified t)) . -677) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) 678 (675 . 678) (672 . 675) (nil fontified t 671 . 672) (nil fontified t 670 . 671) (nil fontified t 669 . 670) (nil fontified t 668 . 669) (nil fontified t 667 . 668) (nil fontified t 666 . 667) (nil fontified t 665 . 666) (nil fontified t 664 . 665) (nil fontified t 663 . 664) (nil fontified t 662 . 663) (#("offset_att" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . -654) (664 . 682) 664 (654 . 664) (653 . 654) (647 . 653) (643 . 647) (#("[" 0 1 (fontified t)) . -643) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (#("n" 0 1 (fontified t)) . -644) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (#("u" 0 1 (fontified t)) . -645) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (#("m" 0 1 (fontified t)) . -646) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) 647 (643 . 647) (#("+" 0 1 (fontified t)) . -643) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (#("=" 0 1 (fontified t)) . -644) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("p" 0 1 (fontified t)) . -645) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) 646 (645 . 646)) nil (25271 2840 861469 443000) 0 nil])
([nil nil ((#("    num_attributes_++;
" 0 4 (fontified t) 4 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t)) . 598) (undo-tree-id323 . -21) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) (undo-tree-id341 . -4) (undo-tree-id342 . -4) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (undo-tree-id347 . -4) (undo-tree-id348 . -4) (undo-tree-id349 . -21) (undo-tree-id350 . -21) (undo-tree-id351 . -21) (undo-tree-id352 . -21) (undo-tree-id353 . -21) 619) nil (25271 2840 861342 751000) 0 nil])
([nil nil ((nil rear-nonsticky nil 680 . 681) (#("
" 0 1 (fontified nil)) . -699) (676 . 700) 619) nil (25271 2840 861281 431000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 308)) nil (25271 2840 861275 285000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 307) (undo-tree-id322 . -1)) nil (25271 2840 861271 513000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -307) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) 308 (307 . 308) (306 . 307) (#(" " 0 1 (fontified t)) . -306) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) 307) nil (25271 2840 861263 342000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 307) (undo-tree-id313 . 1)) nil (25271 2841 265606 65000) 0 nil])
([nil nil ((321 . 322) (320 . 321) (319 . 320) (318 . 319) (312 . 318) (310 . 312) (307 . 310)) nil (25271 2856 336940 42000) 0 nil] [nil nil ((321 . 322) (320 . 321) (319 . 320) (318 . 319) (312 . 318) (310 . 312) (307 . 310)) ((#("std" 0 1 (face font-lock-constant-face fontified nil) 1 2 (face font-lock-constant-face fontified nil) 2 3 (face font-lock-constant-face fontified nil)) . 307) (#("::" 0 1 (fontified nil) 1 2 (fontified nil)) . 310) (#("size_t" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 312) (#("(" 0 1 (fontified nil)) . 318) (#("0" 0 1 (fontified nil)) . 319) (#(")" 0 1 (fontified nil)) . 320) (#("}" 0 1 (fontified t)) . 321)) (25271 2840 865374 319000) 0 nil])
([nil nil ((283 . 285) (280 . 283)) nil (25271 2890 695201 279000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . 665)) ((665 . 666)) (25271 2856 335000 908000) 0 nil])
([nil nil ((947 . 948) (#(";" 0 1 (fontified t)) . 947)) ((947 . 948) (#("u" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 947)) (25271 2840 861203 349000) 0 nil])
([nil nil ((nil rear-nonsticky nil 720 . 721) (#("
" 0 1 (fontified nil)) . -836) (716 . 837) 696) nil (25271 3076 62011 822000) 0 nil] [nil nil ((#(" C::value_type;" 0 1 (fontified t) 1 2 (face font-lock-constant-face fontified t) 2 15 (fontified t)) . 410)) ((410 . 425)) (25271 2890 693443 523000) 0 nil])
nil
nil
([nil nil ((#("0" 0 1 (fontified t)) . 747)) nil (25271 3076 62005 676000) 0 nil])
nil
([nil nil ((756 . 764) (#("v" 0 1 (fontified t)) . -756) (undo-tree-id755 . -1) (#("u" 0 1 (fontified t)) . -757) (undo-tree-id756 . -1) (#("t" 0 1 (fontified t)) . -758) (undo-tree-id757 . -1) 759 (747 . 759)) nil (25271 3076 61998 971000) 0 nil])
([nil nil ((#("    offset_attributes_.push_back(offset_attributes_-1 + size_*sizeof(vector));
    num_attributes_++;
" 0 4 (fontified t) 4 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (face font-lock-keyword-face fontified t) 63 64 (face font-lock-keyword-face fontified t) 64 65 (face font-lock-keyword-face fontified t) 65 66 (face font-lock-keyword-face fontified t) 66 67 (face font-lock-keyword-face fontified t) 67 68 (face font-lock-keyword-face fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 82 (fontified t) 82 83 (fontified t rear-nonsticky t) 83 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t)) . 615) (undo-tree-id743 . -102) (undo-tree-id744 . -101) (undo-tree-id745 . -32) (undo-tree-id746 . -32) (undo-tree-id747 . -32) (undo-tree-id748 . -46) (undo-tree-id749 . -56) (undo-tree-id750 . -60) (undo-tree-id751 . -62) (undo-tree-id752 . -66) (undo-tree-id753 . -46) (undo-tree-id754 . -46) 661) nil (25271 3076 61984 654000) 0 nil])
([nil nil ((nil rear-nonsticky nil 754 . 755) (#("
" 0 1 (fontified nil)) . -852) (750 . 853) 744) nil (25271 3076 61958 324000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 691)) nil (25271 3076 61952 667000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t)) . -708) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) 709 (708 . 709) (696 . 708) (#("a" 0 1 (fontified t)) . -696) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (#("t" 0 1 (fontified t)) . -697) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) 698 (691 . 698)) nil (25271 3076 61945 543000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 763)) nil (25271 3076 61914 185000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -764) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (#("i" 0 1 (fontified t)) . -765) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (#("z" 0 1 (fontified t)) . -766) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (#("e" 0 1 (fontified t)) . -767) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) 768 (764 . 768) (763 . 764)) nil (25271 3076 61906 13000) 0 nil])
([nil nil ((#("offset" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t)) . 293)) nil (25271 3076 61857 125000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . 293)) nil (25271 3076 61852 375000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-constant-face fontified t)) . 280)) nil (25271 3076 61847 766000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-constant-face fontified t)) . 280)) nil (25271 3076 61843 17000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-constant-face fontified t)) . 280)) nil (25271 3076 61838 687000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . 280)) nil (25271 3076 61834 287000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . 280) (undo-tree-id710 . -1)) nil (25271 3076 61830 26000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . 280)) nil (25271 3076 61824 229000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-type-face fontified t)) . 280)) nil (25271 3076 61819 480000) 0 nil])
([nil nil ((#("z" 0 1 (face font-lock-type-face fontified nil)) . 280)) nil (25271 3076 61815 290000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face fontified t)) . 280) (undo-tree-id709 . -1)) nil (25271 3076 61809 633000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 280)) nil (25271 3076 61802 369000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 280)) nil (25271 3076 69028 805000) 0 nil])
([nil nil ((179 . 182) (176 . 179)) nil (25271 3185 900464 259000) 0 nil] [nil nil ((289 . 290) (280 . 289) (#("a" 0 1 (fontified t)) . -280) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) 281 (280 . 281)) ((#("a" 0 1 (fontified nil)) . 280) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (280 . 281) (#("Attribute" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 280) (undo-tree-id760 . -9) (undo-tree-id761 . -9) (undo-tree-id762 . -9) (#("
" 0 1 (fontified t)) . 289) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1)) (25271 3076 61786 166000) 0 nil])
([nil nil ((#("  str
" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 177) (undo-tree-id824 . 1) (undo-tree-id825 . -4) 181) nil (25271 3185 900459 91000) 0 nil])
nil
([nil nil ((292 . 293) (289 . 291) (#("    " 0 4 (fontified nil)) . 289) (undo-tree-id820 . -4) (293 . 294) (288 . 293) (287 . 288) (284 . 287) (281 . 284) (#("v" 0 1 (face font-lock-type-face fontified t)) . -281) (undo-tree-id821 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -282) (undo-tree-id822 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -283) (undo-tree-id823 . -1) 284 (276 . 284) (268 . 276) (265 . 268) 235) nil (25271 3185 900448 126000) 0 nil])
([nil nil ((315 . 316) (314 . 315) (313 . 314) (312 . 313) (#("{" 0 1 (fontified t)) . -312) (undo-tree-id814 . -1) (#("0" 0 1 (fontified t)) . -313) (undo-tree-id815 . -1) (#("}" 0 1 (fontified t)) . -314) (undo-tree-id816 . -1) (#(";" 0 1 (fontified t)) . -315) (undo-tree-id817 . -1) 316 (315 . 316) (314 . 315) (313 . 314) (312 . 313) (#(" " 0 1 (fontified t)) . -312) (undo-tree-id818 . -1) (#("=" 0 1 (fontified t)) . -313) (undo-tree-id819 . -1) 314 (298 . 314) (289 . 293) (#("  " 0 2 (fontified nil)) . 289) (295 . 296) (289 . 291) (#("    " 0 4 (fontified nil)) . 289) (296 . 297) (293 . 296) (288 . 293)) nil (25271 3185 900422 424000) 0 nil])
([nil nil ((333 . 337) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -333) (undo-tree-id807 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -334) (undo-tree-id808 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -335) (undo-tree-id809 . -1) (#("g" 0 1 (face font-lock-variable-name-face fontified t)) . -336) (undo-tree-id810 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -337) (undo-tree-id811 . -1) (#("=" 0 1 (fontified t)) . -338) (undo-tree-id812 . -1) 339 (338 . 339) (#("h" 0 1 (face font-lock-variable-name-face fontified t)) . -338) (undo-tree-id813 . -1) 339 (326 . 339) (317 . 321) (#("  " 0 2 (fontified nil)) . 317) (323 . 324) (317 . 319) (#("    " 0 4 (fontified nil)) . 317) (324 . 325) (321 . 324) (316 . 321) 315) nil (25271 3185 900390 926000) 0 nil])
([nil nil ((326 . 340) (317 . 321) (#("  " 0 2 (fontified nil)) . 317) (323 . 324) (317 . 319) (#("    " 0 4 (fontified nil)) . 317) (324 . 325) (323 . 324) (321 . 323) (316 . 321) 308) nil (25271 3185 900363 688000) 0 nil])
([nil nil ((340 . 341)) nil (25271 3185 900355 586000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 312)) nil (25271 3185 900351 256000) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-variable-name-face fontified t)) . 312)) nil (25271 3185 900347 904000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 312)) nil (25271 3185 900344 63000) 0 nil])
([nil nil ((359 . 360)) nil (25271 3185 900340 780000) 0 nil])
([nil nil ((368 . 369) (365 . 368)) nil (25271 3185 900336 520000) 0 nil])
([nil nil ((#("  i
" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 366) (undo-tree-id793 . 1) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -3) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -2) (undo-tree-id806 . -2) 368) nil (25271 3185 900329 396000) 0 nil])
([nil nil ((#("  struct Attribute
  {
    std::size_t offset_;
    std::size_t length_;
    std::size_t dim_;
  };
" 0 2 (fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (face font-lock-keyword-face fontified t) 7 8 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face fontified t) 11 12 (face font-lock-type-face fontified t) 12 13 (face font-lock-type-face fontified t) 13 14 (face font-lock-type-face fontified t) 14 15 (face font-lock-type-face fontified t) 15 16 (face font-lock-type-face fontified t) 16 17 (face font-lock-type-face fontified t) 17 18 (face font-lock-type-face fontified t) 18 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 27 (fontified t) 27 28 (face font-lock-constant-face fontified t) 28 29 (face font-lock-constant-face fontified t) 29 30 (face font-lock-constant-face fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (face font-lock-type-face fontified t) 33 34 (face font-lock-type-face fontified t) 34 35 (face font-lock-type-face fontified t) 35 36 (face font-lock-type-face fontified t) 36 37 (face font-lock-type-face fontified t) 37 38 (face font-lock-type-face c-type c-decl-id-start fontified t) 38 39 (fontified t) 39 40 (face font-lock-variable-name-face fontified t) 40 41 (face font-lock-variable-name-face fontified t) 41 42 (face font-lock-variable-name-face fontified t) 42 43 (face font-lock-variable-name-face fontified t) 43 44 (face font-lock-variable-name-face fontified t) 44 45 (face font-lock-variable-name-face fontified t) 45 46 (face font-lock-variable-name-face fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 52 (fontified t) 52 53 (face font-lock-constant-face fontified t) 53 54 (face font-lock-constant-face fontified t) 54 55 (face font-lock-constant-face fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (face font-lock-type-face fontified t) 58 59 (face font-lock-type-face fontified t) 59 60 (face font-lock-type-face fontified t) 60 61 (face font-lock-type-face fontified t) 61 62 (face font-lock-type-face fontified t) 62 63 (face font-lock-type-face c-type c-decl-id-start fontified t) 63 64 (fontified t) 64 65 (face font-lock-variable-name-face fontified t) 65 66 (face font-lock-variable-name-face fontified t) 66 67 (face font-lock-variable-name-face fontified t) 67 68 (face font-lock-variable-name-face fontified t) 68 69 (face font-lock-variable-name-face fontified t) 69 70 (face font-lock-variable-name-face fontified t) 70 71 (face font-lock-variable-name-face fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 77 (fontified t) 77 78 (face font-lock-constant-face fontified t) 78 79 (face font-lock-constant-face fontified t) 79 80 (face font-lock-constant-face fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (face font-lock-type-face fontified t) 83 84 (face font-lock-type-face fontified t) 84 85 (face font-lock-type-face fontified t) 85 86 (face font-lock-type-face fontified t) 86 87 (face font-lock-type-face fontified t) 87 88 (face font-lock-type-face c-type c-decl-id-start fontified t) 88 89 (fontified t) 89 90 (face font-lock-variable-name-face fontified t) 90 91 (face font-lock-variable-name-face fontified t) 91 92 (face font-lock-variable-name-face fontified t) 92 93 (face font-lock-variable-name-face fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t)) . 266) (undo-tree-id766 . -2) (undo-tree-id767 . -100) (undo-tree-id768 . -100) (undo-tree-id769 . -100) (undo-tree-id770 . -100) (undo-tree-id771 . -100) (undo-tree-id772 . -100) (undo-tree-id773 . -100) (undo-tree-id774 . -100) (undo-tree-id775 . -100) (undo-tree-id776 . -100) (undo-tree-id777 . -100) (undo-tree-id778 . -97) (undo-tree-id779 . -97) (undo-tree-id780 . -75) (undo-tree-id781 . -75) (undo-tree-id782 . -50) (undo-tree-id783 . -50) (undo-tree-id784 . -25) (undo-tree-id785 . -25) (undo-tree-id786 . -21) (undo-tree-id787 . -21) (undo-tree-id788 . -2) (undo-tree-id789 . -2) (undo-tree-id790 . -2) (undo-tree-id791 . -2) (undo-tree-id792 . -2) 268) nil (25271 3185 903648 25000) 0 nil])
([nil nil ((nil rear-nonsticky nil 154 . 155) (#("
" 0 1 (fontified nil)) . -252) (152 . 253)) nil (25271 3292 420645 365000) 0 nil] [nil nil ((nil rear-nonsticky nil 169 . 170) (#("
" 0 1 (fontified nil)) . -267) (167 . 268) 166) ((#("
  struct Attribute
  {
    std::size_t offset_;
    std::size_t length_;
    std::size_t dim_;
  };
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (rear-nonsticky nil fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil) 5 6 (face font-lock-keyword-face fontified nil) 6 7 (face font-lock-keyword-face fontified nil) 7 8 (face font-lock-keyword-face fontified nil) 8 9 (c-type c-decl-type-start face font-lock-keyword-face fontified nil) 9 10 (fontified nil) 10 11 (face font-lock-type-face fontified nil) 11 12 (face font-lock-type-face fontified nil) 12 13 (face font-lock-type-face fontified nil) 13 14 (face font-lock-type-face fontified nil) 14 15 (face font-lock-type-face fontified nil) 15 16 (face font-lock-type-face fontified nil) 16 17 (face font-lock-type-face fontified nil) 17 18 (face font-lock-type-face fontified nil) 18 19 (face font-lock-type-face fontified nil) 19 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 28 (fontified nil) 28 29 (face font-lock-constant-face fontified nil) 29 30 (face font-lock-constant-face fontified nil) 30 31 (face font-lock-constant-face fontified nil) 31 32 (fontified nil) 32 33 (fontified nil) 33 34 (face font-lock-type-face fontified nil) 34 35 (face font-lock-type-face fontified nil) 35 36 (face font-lock-type-face fontified nil) 36 37 (face font-lock-type-face fontified nil) 37 38 (face font-lock-type-face fontified nil) 38 39 (face font-lock-type-face c-type c-decl-id-start fontified nil) 39 40 (fontified nil) 40 41 (face font-lock-variable-name-face fontified nil) 41 42 (face font-lock-variable-name-face fontified nil) 42 43 (face font-lock-variable-name-face fontified nil) 43 44 (face font-lock-variable-name-face fontified nil) 44 45 (face font-lock-variable-name-face fontified nil) 45 46 (face font-lock-variable-name-face fontified nil) 46 47 (face font-lock-variable-name-face fontified nil) 47 48 (fontified nil) 48 49 (fontified nil) 49 53 (fontified nil) 53 54 (face font-lock-constant-face fontified nil) 54 55 (face font-lock-constant-face fontified nil) 55 56 (face font-lock-constant-face fontified nil) 56 57 (fontified nil) 57 58 (fontified nil) 58 59 (face font-lock-type-face fontified nil) 59 60 (face font-lock-type-face fontified nil) 60 61 (face font-lock-type-face fontified nil) 61 62 (face font-lock-type-face fontified nil) 62 63 (face font-lock-type-face fontified nil) 63 64 (face font-lock-type-face c-type c-decl-id-start fontified nil) 64 65 (fontified nil) 65 66 (face font-lock-variable-name-face fontified nil) 66 67 (face font-lock-variable-name-face fontified nil) 67 68 (face font-lock-variable-name-face fontified nil) 68 69 (face font-lock-variable-name-face fontified nil) 69 70 (face font-lock-variable-name-face fontified nil) 70 71 (face font-lock-variable-name-face fontified nil) 71 72 (face font-lock-variable-name-face fontified nil) 72 73 (fontified nil) 73 74 (fontified nil) 74 78 (fontified nil) 78 79 (face font-lock-constant-face fontified nil) 79 80 (face font-lock-constant-face fontified nil) 80 81 (face font-lock-constant-face fontified nil) 81 82 (fontified nil) 82 83 (fontified nil) 83 84 (face font-lock-type-face fontified nil) 84 85 (face font-lock-type-face fontified nil) 85 86 (face font-lock-type-face fontified nil) 86 87 (face font-lock-type-face fontified nil) 87 88 (face font-lock-type-face fontified nil) 88 89 (face font-lock-type-face c-type c-decl-id-start fontified nil) 89 90 (fontified nil) 90 91 (face font-lock-variable-name-face fontified nil) 91 92 (face font-lock-variable-name-face fontified nil) 92 93 (face font-lock-variable-name-face fontified nil) 93 94 (face font-lock-variable-name-face fontified nil) 94 95 (fontified nil) 95 96 (fontified nil) 96 98 (fontified nil) 98 99 (fontified nil) 99 100 (fontified nil) 100 101 (fontified nil)) . 167) (undo-tree-id826 . -100) (undo-tree-id827 . -1) (undo-tree-id828 . -100) (undo-tree-id829 . -22) (undo-tree-id830 . -20) (undo-tree-id831 . -22) (267 . 268) (nil rear-nonsticky t 169 . 170)) (25271 3185 900215 206000) 0 nil])
([nil nil ((283 . 287) (#("  " 0 2 (fontified t)) . 283) (272 . 274) (268 . 270) (253 . 255) 155) nil (25271 3292 420639 568000) 0 nil])
nil
([nil nil ((#("  " 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t)) . -153) (undo-tree-id860 . -2) (undo-tree-id861 . -2) (undo-tree-id862 . -2) (undo-tree-id863 . -2) (undo-tree-id864 . -2) 155) nil (25271 3292 420632 933000) 0 nil])
([nil nil ((153 . 155) 155) nil (25271 3292 420620 641000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -153) (undo-tree-id855 . -2) (undo-tree-id856 . -2) (undo-tree-id857 . -2) (undo-tree-id858 . -2) (undo-tree-id859 . -2) 155) nil (25271 3292 420615 333000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -170) (undo-tree-id849 . -2) (undo-tree-id850 . -2) (undo-tree-id851 . -2) (undo-tree-id852 . -2) (undo-tree-id853 . -2) (undo-tree-id854 . -2) 172) nil (25271 3292 420601 435000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -172)) nil (25271 3292 420586 768000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -193)) nil (25271 3292 420583 346000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -214)) nil (25271 3292 420579 994000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -232)) nil (25271 3292 420576 152000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -235)) nil (25271 3292 420572 800000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -248)) nil (25271 3292 420568 540000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -250)) nil (25271 3292 420565 327000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -259)) nil (25271 3292 420561 486000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -290)) nil (25271 3292 420557 645000) 0 nil])
([nil nil ((259 . 261) (#(" " 0 1 (fontified t)) . -259) (undo-tree-id848 . -1) 260 (259 . 260)) nil (25271 3292 420553 314000) 0 nil])
([nil nil ((292 . 296) 293) nil (25271 3292 420546 540000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 293)) nil (25271 3292 420542 280000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 293)) nil (25271 3292 420538 508000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -371) (undo-tree-id847 . -1) 372 (362 . 372)) nil (25271 3292 420534 737000) 0 nil])
([nil nil ((#("{std::size_t(0)}; " 0 1 (c-type c-not-decl fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 384) (undo-tree-id840 . -15) (undo-tree-id841 . -6) (undo-tree-id842 . -15) (undo-tree-id843 . -6) (undo-tree-id844 . -6) (undo-tree-id845 . -10) (undo-tree-id846 . -6)) nil (25271 3292 420526 845000) 0 nil])
([nil nil ((384 . 385)) nil (25271 3292 420507 289000) 0 nil])
([nil nil ((345 . 346) (#("1" 0 1 (fontified t)) . 345)) nil (25271 3292 420503 518000) 0 nil])
([nil nil ((558 . 559) (545 . 558) (nil fontified t 544 . 545) (nil c-type c-decl-id-start 544 . 545) (nil face font-lock-type-face 544 . 545) (nil fontified t 543 . 544) (nil face font-lock-type-face 543 . 544) (nil fontified t 542 . 543) (nil face font-lock-type-face 542 . 543) (nil fontified t 541 . 542) (nil face font-lock-type-face 541 . 542) (nil fontified t 540 . 541) (nil face font-lock-type-face 540 . 541) (#("attri" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -534) (539 . 550) 539 (534 . 539) (529 . 534)) nil (25271 3292 420496 464000) 0 nil])
([nil nil ((#("std::size_t offset_;
" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face fontified t) 8 9 (face font-lock-type-face fontified t) 9 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face c-type c-decl-id-start fontified t) 11 12 (fontified t) 12 13 (face font-lock-variable-name-face fontified t) 13 14 (face font-lock-variable-name-face fontified t) 14 15 (face font-lock-variable-name-face fontified t) 15 16 (face font-lock-variable-name-face fontified t) 16 17 (face font-lock-variable-name-face fontified t) 17 18 (face font-lock-variable-name-face fontified t) 18 19 (face font-lock-variable-name-face fontified t) 19 20 (fontified t) 20 21 (fontified t)) . 172) (undo-tree-id832 . -19) (undo-tree-id833 . -5) (undo-tree-id834 . -9) (undo-tree-id835 . -19) (undo-tree-id836 . -19) (undo-tree-id837 . -19) (undo-tree-id838 . -19) (undo-tree-id839 . -19) 191) nil (25271 3292 423689 100000) 0 nil])
([nil nil ((172 . 193) 188) nil (25271 3400 226476 150000) 0 nil] [nil nil ((nil rear-nonsticky nil 210 . 211) (#("
" 0 1 (fontified nil)) . -231) (210 . 232) 209) ((#("
std::size_t offset_;
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (face font-lock-constant-face fontified nil) 2 3 (face font-lock-constant-face fontified nil) 3 4 (face font-lock-constant-face fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (face font-lock-type-face fontified nil) 7 8 (face font-lock-type-face fontified nil) 8 9 (face font-lock-type-face fontified nil) 9 10 (face font-lock-type-face fontified nil) 10 11 (face font-lock-type-face fontified nil) 11 12 (face font-lock-type-face c-type c-decl-id-start fontified nil) 12 13 (fontified nil) 13 14 (face font-lock-variable-name-face fontified nil) 14 15 (face font-lock-variable-name-face fontified nil) 15 16 (face font-lock-variable-name-face fontified nil) 16 17 (face font-lock-variable-name-face fontified nil) 17 18 (face font-lock-variable-name-face fontified nil) 18 19 (face font-lock-variable-name-face fontified nil) 19 20 (face font-lock-variable-name-face fontified nil) 20 21 (fontified nil) 21 22 (fontified nil)) . 210) (undo-tree-id865 . -21) (undo-tree-id866 . -1) (undo-tree-id867 . -21) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (231 . 232) (nil rear-nonsticky t 210 . 211)) (25271 3292 420428 369000) 0 nil])
([nil nil ((218 . 220) (195 . 197) (172 . 174)) nil (25271 3400 226471 331000) 0 nil])
nil
([nil nil ((535 . 540)) nil (25271 3400 226466 23000) 0 nil])
([nil nil ((566 . 567) (565 . 566) (556 . 565) (555 . 556) (539 . 555) (535 . 539)) nil (25271 3400 226461 763000) 0 nil])
([nil nil ((554 . 556) (551 . 554)) nil (25271 3410 518724 304000) 0 nil])
([nil nil ((574 . 578) (#(" " 0 1 (fontified nil)) . 574) (#("   " 0 3 (fontified nil)) . 573) (undo-tree-id902 . -3) (undo-tree-id903 . -3) (576 . 577)) nil (25271 3639 656345 869000) 0 nil] [nil nil ((579 . 582) (575 . 579) (#("    " 0 4 (fontified nil)) . 574) (undo-tree-id879 . -4) (574 . 579) (#(" " 0 1 (fontified nil)) . 574) (#("   " 0 3 (fontified nil)) . 573) (undo-tree-id880 . -3) (576 . 577)) ((#("
" 0 1 (fontified nil)) . 576) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (573 . 576) (574 . 575) (#("    
" 0 4 (fontified nil) 4 5 (fontified nil)) . 574) (undo-tree-id885 . -5) (undo-tree-id886 . -5) (undo-tree-id887 . -5) (undo-tree-id888 . -5) (574 . 578) (#("    " 0 4 (fontified nil)) . 575) (undo-tree-id889 . -4) (undo-tree-id890 . -4) (undo-tree-id891 . -4) (#("kku" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 579) (undo-tree-id892 . -2) (undo-tree-id893 . -2)) (25271 3410 506999 557000) 0 nil] [nil nil ((574 . 578) (#(" " 0 1 (fontified nil)) . 574) (#("   " 0 3 (fontified nil)) . 573) (undo-tree-id871 . -3) (undo-tree-id872 . -3) (undo-tree-id873 . -3) (undo-tree-id874 . -3) (undo-tree-id875 . -3) (undo-tree-id876 . -3) (undo-tree-id877 . -3) (undo-tree-id878 . -3) (576 . 577)) ((#("
" 0 1 (fontified nil)) . 576) (573 . 576) (574 . 575) (#("    " 0 4 (fontified t)) . 574)) (25271 3400 226441 20000) 0 nil])
([nil nil ((614 . 615) (612 . 614) (611 . 612) (606 . 611) (605 . 606) (#(" " 0 1 (fontified t)) . -605) (undo-tree-id900 . -1) (#("?" 0 1 (fontified t)) . -606) (undo-tree-id901 . -1) 607 (591 . 607) (589 . 591) (577 . 589) (573 . 577)) nil (25271 3639 656335 323000) 0 nil])
nil
nil
([nil nil ((#("u" 0 1 (fontified t)) . -636) (undo-tree-id898 . -1) 637 (636 . 637) (631 . 636) (627 . 631) (625 . 627) (620 . 625) (#("b" 0 1 (fontified t)) . -620) (undo-tree-id899 . -1) 621 (609 . 621)) nil (25271 3639 656321 565000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -588) (undo-tree-id894 . -1) 589 (588 . 589) (587 . 588) (581 . 587) (580 . 581) (574 . 580) (#("a" 0 1 (fontified t)) . -574) (undo-tree-id895 . -1) (#("u" 0 1 (fontified t)) . -575) (undo-tree-id896 . -1) (#("t" 0 1 (fontified t)) . -576) (undo-tree-id897 . -1) 577 (573 . 577) (572 . 573) (571 . 572)) nil (25271 3639 656305 711000) 0 nil])
([nil nil ((653 . 657)) nil (25271 3639 656275 679000) 0 nil])
([nil nil ((671 . 672) (669 . 671) (653 . 669)) nil (25271 3639 658825 779000) 0 nil])
([nil nil ((652 . 653)) nil (25271 4375 942320 357000) 0 nil] [nil nil ((676 . 677)) ((#("_" 0 1 (fontified t)) . 676)) (25271 3639 656259 127000) 0 nil])
([nil nil ((654 . 655)) nil (25271 4375 942317 74000) 0 nil])
nil
([nil nil ((678 . 679)) nil (25271 4375 942313 792000) 0 nil])
([nil nil ((1011 . 1017)) nil (25271 4375 942310 370000) 0 nil])
([nil nil ((#("    offset_attributes_.push_back(offset_attributes_-1 + size_*sizeof(vector));
" 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 12 (fontified t) 12 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 45 (fontified t) 45 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (face font-lock-keyword-face fontified t) 63 64 (face font-lock-keyword-face fontified t) 64 65 (face font-lock-keyword-face fontified t) 65 66 (face font-lock-keyword-face fontified t) 66 67 (face font-lock-keyword-face fontified t) 67 68 (face font-lock-keyword-face fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t)) . 1020) (undo-tree-id938 . -56) (undo-tree-id939 . -62) (undo-tree-id940 . -66) (undo-tree-id941 . -56) (undo-tree-id942 . -60) 1076) nil (25271 4375 942305 690000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 953)) nil (25271 4375 942293 608000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 953)) nil (25271 4375 942289 836000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 907)) nil (25271 4375 942286 484000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 907)) nil (25271 4375 942282 782000) 0 nil])
([nil nil ((#("size" 0 4 (fontified t)) . 800) (undo-tree-id937 . -4)) nil (25271 4375 942278 452000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 800)) nil (25271 4375 942273 284000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 800)) nil (25271 4375 942269 862000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 800)) nil (25271 4375 942266 21000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 800) (undo-tree-id936 . -1)) nil (25271 4375 942262 598000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 800)) nil (25271 4375 942256 941000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 800)) nil (25271 4375 942253 659000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . 800)) nil (25271 4375 942250 306000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 800) (undo-tree-id935 . -1)) nil (25271 4375 942246 675000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 800)) nil (25271 4375 942240 529000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 800)) nil (25271 4375 942237 176000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 800)) nil (25271 4375 942233 824000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . 800)) nil (25271 4375 942230 472000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 800)) nil (25271 4375 942226 700000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 800)) nil (25271 4375 942223 348000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 800)) nil (25271 4375 942219 995000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-keyword-face fontified t)) . 800)) nil (25271 4375 942216 294000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 800)) nil (25271 4375 942213 11000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 800)) nil (25271 4375 942209 729000) 0 nil])
([nil nil ((800 . 804)) nil (25271 4375 942206 446000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 758)) nil (25271 4375 942202 46000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 758)) nil (25271 4375 942198 624000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 758)) nil (25271 4375 942194 853000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 758)) nil (25271 4375 942191 500000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 758)) nil (25271 4375 942188 567000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 758)) nil (25271 4375 942184 796000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 758)) nil (25271 4375 942181 513000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 758)) nil (25271 4375 942178 231000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 758)) nil (25271 4375 942174 948000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 758)) nil (25271 4375 942171 107000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 758)) nil (25271 4375 942167 685000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 758)) nil (25271 4375 942163 843000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 758)) nil (25271 4375 942160 491000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . 758)) nil (25271 4375 942156 161000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 758)) nil (25271 4375 942152 389000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 758)) nil (25271 4375 942149 107000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 758)) nil (25271 4375 942145 335000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 758)) nil (25271 4375 942141 983000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . 758)) nil (25271 4375 942138 142000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 758)) nil (25271 4375 942134 720000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . 758)) nil (25271 4375 942130 948000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 758)) nil (25271 4375 942127 596000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 758)) nil (25271 4375 942123 336000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 758)) nil (25271 4375 942119 983000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 758)) nil (25271 4375 942116 212000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 758)) nil (25271 4375 942111 951000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 758)) nil (25271 4375 942108 599000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 758)) nil (25271 4375 942105 177000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 758)) nil (25271 4375 942101 336000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . 758)) nil (25271 4375 942097 983000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 758)) nil (25271 4375 942094 701000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 758)) nil (25271 4375 942090 929000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 758)) nil (25271 4375 942087 577000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 758)) nil (25271 4375 942071 304000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 758)) nil (25271 4375 942067 952000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 758)) nil (25271 4375 942064 180000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . 758)) nil (25271 4375 942060 828000) 0 nil])
([nil nil ((758 . 764)) nil (25271 4375 942056 568000) 0 nil])
([nil nil ((738 . 739) (737 . 738) (733 . 737) (732 . 733) (727 . 732) (726 . 727) (720 . 726)) nil (25271 4375 942052 307000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 453)) nil (25271 4375 942045 672000) 0 nil])
([nil nil ((#("    glBufferData(GL_ARRAY_BUFFER, 
" 0 4 (fontified t) 4 14 (fontified t) 14 16 (fontified t) 16 17 (fontified t) 17 32 (fontified t) 32 33 (fontified t) 33 35 (fontified t)) . 1316) (undo-tree-id934 . -4) 1320) nil (25271 4375 942041 761000) 0 nil])
([nil nil ((#("		 size_ * sizeof(vector),
" 0 3 (fontified t) 3 8 (fontified t) 8 11 (fontified t) 11 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t)) . 1316) (undo-tree-id929 . -1) (undo-tree-id930 . -3) (undo-tree-id931 . -7) (undo-tree-id932 . -11) (undo-tree-id933 . -15) 1317) nil (25271 4375 942035 57000) 0 nil])
([nil nil ((#("		 container.data(), GL_STATIC_DRAW);
" 0 3 (fontified t) 3 19 (fontified t) 19 20 (fontified t) 20 26 (fontified t) 26 28 (fontified t) 28 30 (fontified t) 30 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t)) . 1316) (undo-tree-id928 . -1) 1317) nil (25271 4375 942022 276000) 0 nil])
([nil nil ((#("    glEnableVertexAttribArray(0);
" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 25 (fontified t) 25 27 (fontified t) 27 30 (fontified t) 30 33 (fontified t) 33 34 (fontified t)) . 1316) (undo-tree-id927 . -8) 1324) nil (25271 4375 942014 663000) 0 nil])
([nil nil ((#("    glVertexAttribPointer(0, dim, GL_FLOAT, GL_FALSE,
" 0 4 (fontified t) 4 7 (fontified t) 7 8 (fontified t) 8 19 (fontified t) 19 20 (fontified t) 20 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 42 (fontified t) 42 43 (fontified t) 43 54 (fontified t)) . 1316) (undo-tree-id926 . -8) 1324) nil (25271 4375 942008 308000) 0 nil])
([nil nil ((#("			  sizeof(vector), (void*)0);
" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 7 (face font-lock-keyword-face fontified t) 7 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 14 (fontified t) 14 15 (fontified t) 15 18 (fontified t) 18 19 (fontified t) 19 21 (fontified t) 21 22 (fontified t) 22 26 (face font-lock-type-face fontified t) 26 31 (fontified t) 31 32 (fontified t)) . 1316) (undo-tree-id923 . -1) (undo-tree-id924 . -5) (undo-tree-id925 . -9) 1317) nil (25271 4375 942001 673000) 0 nil])
([nil nil ((nil fontified t 1337 . 1338) (nil face font-lock-type-face 1337 . 1338) (nil fontified t 1336 . 1337) (nil face font-lock-type-face 1336 . 1337) (nil fontified t 1335 . 1336) (nil face font-lock-type-face 1335 . 1336) (#("con" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t)) . -1333) (1336 . 1341) 1336 (1333 . 1336) (1332 . 1333) (nil fontified t 1331 . 1332) (nil c-type c-decl-id-start 1331 . 1332) (nil face font-lock-type-face 1331 . 1332) (nil fontified t 1330 . 1331) (nil face font-lock-type-face 1330 . 1331) (nil fontified t 1329 . 1330) (nil face font-lock-type-face 1329 . 1330) (nil fontified t 1328 . 1329) (nil face font-lock-type-face 1328 . 1329) (nil fontified t 1327 . 1328) (nil face font-lock-type-face 1327 . 1328) (#("AddAt" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1320) (1325 . 1337) 1325 (1320 . 1325) (1316 . 1320) (1316 . 1317) 1324) nil (25271 4375 941987 984000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-keyword-face fontified t)) . 1337) (undo-tree-id922 . -1)) nil (25271 4375 941970 663000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . 1336) (undo-tree-id921 . -1)) nil (25271 4375 941964 517000) 0 nil])
([nil nil ((1343 . 1344) (1342 . 1343) (nil fontified t 1341 . 1342) (nil face font-lock-type-face 1341 . 1342) (nil fontified t 1340 . 1341) (nil face font-lock-type-face 1340 . 1341) (nil fontified t 1339 . 1340) (nil face font-lock-type-face 1339 . 1340) (nil fontified t 1338 . 1339) (nil face font-lock-type-face 1338 . 1339) (nil fontified t 1335 . 1338) (nil face font-lock-type-face 1335 . 1338) (#("contain" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t)) . -1333) (1340 . 1349) 1340 (1336 . 1340)) nil (25271 4375 952666 595000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1245)) nil (25271 4622 31337 296000) 0 nil] [nil nil ((#("l" 0 1 (fontified t)) . -1300) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) 1301 (1300 . 1301) (#("B" 0 1 (fontified t)) . -1301) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (#("k" 0 1 (fontified t)) . -1302) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (#("k" 0 1 (fontified t)) . -1303) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) 1304 (1302 . 1304)) ((#("kk" 0 1 (fontified nil) 1 2 (fontified nil)) . 1302) (undo-tree-id943 . -1) (undo-tree-id944 . -2) (undo-tree-id945 . -1) (1301 . 1304) (#("l" 0 1 (fontified nil)) . 1300) (undo-tree-id946 . -1) (1300 . 1301)) (25271 4375 941933 578000) 0 nil])
([nil nil ((1039 . 1042)) nil (25271 4622 31334 14000) 0 nil])
nil
([nil nil ((#("h" 0 1 (face font-lock-variable-name-face fontified t)) . -1066) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) 1067 (1066 . 1067)) nil (25271 4622 31330 242000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-variable-name-face fontified t)) . -1065) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (#("h" 0 1 (face font-lock-variable-name-face fontified t)) . -1066) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) 1067 (1065 . 1067)) nil (25271 4622 31317 741000) 0 nil])
([nil nil ((1063 . 1066)) nil (25271 4622 31297 836000) 0 nil])
([nil nil ((#("const " 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . 1054)) nil (25271 4622 31294 484000) 0 nil])
([nil nil ((1055 . 1056)) nil (25271 4622 31290 642000) 0 nil])
([nil nil ((1054 . 1060)) nil (25271 4622 31286 731000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . 1062)) nil (25271 4622 31282 890000) 0 nil])
([nil nil ((1075 . 1076)) nil (25271 4622 699700 678000) 0 nil])
([nil nil ((#("size_(size(container))" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 10 (fontified t) 10 11 (fontified t) 11 20 (fontified t) 20 22 (fontified t)) . 1080) (undo-tree-id1082 . -6) (undo-tree-id1083 . -10) (undo-tree-id1084 . -4)) nil (25271 4996 110304 517000) 0 nil] [nil nil ((#(" size_(size(container))" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 11 (fontified t) 11 12 (fontified t) 12 21 (fontified t) 21 23 (fontified t)) . 1079) (undo-tree-id971 . -7) (undo-tree-id972 . -11) (undo-tree-id973 . -1) (undo-tree-id974 . -5)) ((1079 . 1102)) (25271 4622 41643 97000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1077) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (#(" " 0 1 (fontified t)) . -1078) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (#(" " 0 1 (fontified t)) . -1079) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (#(" " 0 1 (fontified t)) . -1080) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (#(" " 0 1 (fontified t)) . -1081) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (#(" " 0 1 (fontified t)) . -1082) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (#(" " 0 1 (fontified t)) . -1083) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) 1084 (1077 . 1084) (#(" " 0 1 (fontified t)) . -1077) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (#(":" 0 1 (fontified t)) . -1078) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (#(" " 0 1 (fontified t)) . -1079) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) 1080) nil (25271 4996 110283 425000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1077) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (#(":" 0 1 (fontified t)) . -1078) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (#("h" 0 1 (fontified t)) . -1079) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) 1080 (1079 . 1080)) ((#("h" 0 1 (fontified nil)) . 1079) (undo-tree-id986 . -1) (1077 . 1080)) (25271 4622 31250 484000) 0 nil])
([nil nil ((#("    auto dim = sizeof(vector)/sizeof(float);		
" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (c-type c-decl-id-start face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 12 (face font-lock-variable-name-face fontified t) 12 15 (fontified t) 15 21 (face font-lock-keyword-face fontified t) 21 22 (fontified t) 22 28 (fontified t) 28 30 (fontified t) 30 36 (face font-lock-keyword-face fontified t) 36 37 (fontified t) 37 42 (face font-lock-type-face fontified t) 42 47 (fontified t)) . 1117) (undo-tree-id1002 . -31) (undo-tree-id1003 . -30) (undo-tree-id1004 . -34) (undo-tree-id1005 . -15) (undo-tree-id1006 . -19) (undo-tree-id1007 . -31) (undo-tree-id1008 . -31) (undo-tree-id1009 . -31) (undo-tree-id1010 . -31) (undo-tree-id1011 . -31) 1148) nil (25271 4996 110145 978000) 0 nil])
nil
([nil nil ((#("    using vector = C::value_type;
" 0 4 (fontified t) 4 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 12 (face font-lock-type-face fontified t) 12 15 (face font-lock-type-face fontified t) 15 16 (face font-lock-type-face c-type c-decl-id-start fontified t) 16 18 (fontified t) 18 19 (fontified t) 19 20 (face font-lock-constant-face fontified t) 20 33 (fontified t) 33 34 (fontified t)) . 1083) (undo-tree-id992 . -34) (undo-tree-id993 . -34) (undo-tree-id994 . -34) (undo-tree-id995 . -34) (undo-tree-id996 . -34) (undo-tree-id997 . -34) (undo-tree-id998 . -34) (undo-tree-id999 . -34) (undo-tree-id1000 . -34) (undo-tree-id1001 . -34)) nil (25271 4996 110122 581000) 0 nil])
([nil nil ((#("	
" 0 2 (fontified t)) . 1083)) nil (25271 4996 110098 835000) 0 nil])
([nil nil ((1218 . 1219)) nil (25271 4996 110095 413000) 0 nil])
([nil nil ((1232 . 1235)) nil (25271 4996 110091 641000) 0 nil])
([nil nil ((1251 . 1252) (1250 . 1251) (1246 . 1250) (1245 . 1246) (#(";" 0 1 (fontified t)) . -1245) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) 1246) nil (25271 4996 110085 495000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1232)) nil (25271 4996 110042 613000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1232)) nil (25271 4996 110037 305000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1232)) nil (25271 4996 110024 873000) 0 nil])
([nil nil ((#("  std::size_t size_;
" 0 1 (fontified t) 1 2 (fontified t) 2 5 (face font-lock-constant-face fontified t) 5 7 (fontified t) 7 12 (face font-lock-type-face fontified t) 12 13 (face font-lock-type-face c-type c-decl-id-start fontified t) 13 14 (fontified t) 14 19 (face font-lock-variable-name-face fontified t) 19 20 (fontified t) 20 21 (fontified t)) . 298) (undo-tree-id1089 . -18) (undo-tree-id1090 . -14) (undo-tree-id1091 . -18) (undo-tree-id1092 . -7) (undo-tree-id1093 . -11) 316 (t 25271 4996 125875 557000)) nil (25271 5040 348229 555000) 0 nil])
([nil nil ((#("  std::size_t num_attributes_ = 0;
" 0 2 (fontified t) 2 5 (face font-lock-constant-face fontified t) 5 7 (fontified t) 7 12 (face font-lock-type-face fontified t) 12 13 (face font-lock-type-face c-type c-decl-id-start fontified t) 13 14 (fontified t) 14 15 (face font-lock-variable-name-face fontified t) 15 16 (face font-lock-variable-name-face fontified t) 16 17 (face font-lock-variable-name-face fontified t) 17 18 (face font-lock-variable-name-face fontified t) 18 19 (face font-lock-variable-name-face fontified t) 19 20 (face font-lock-variable-name-face fontified t) 20 21 (face font-lock-variable-name-face fontified t) 21 22 (face font-lock-variable-name-face fontified t) 22 23 (face font-lock-variable-name-face fontified t) 23 24 (face font-lock-variable-name-face fontified t) 24 25 (face font-lock-variable-name-face fontified t) 25 26 (face font-lock-variable-name-face fontified t) 26 27 (face font-lock-variable-name-face fontified t) 27 28 (face font-lock-variable-name-face fontified t) 28 29 (face font-lock-variable-name-face fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t)) . 298) (undo-tree-id1085 . -18) (undo-tree-id1086 . -18) (undo-tree-id1087 . -7) (undo-tree-id1088 . -11) 316) nil (25271 5041 15679 701000) 0 nil])
([nil nil ((#("num" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 551)) nil (25271 5367 862421 594000) 0 nil] [nil nil ((#("num" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 551)) ((551 . 554)) (25271 5040 354380 587000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 551) (undo-tree-id1160 . 1)) nil (25271 5367 862417 264000) 0 nil])
([nil nil ((553 . 554) (552 . 553) (551 . 552)) ((#("u" 0 1 (fontified nil)) . 551) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (#(";" 0 1 (fontified nil)) . 552) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (#("u" 0 1 (fontified t)) . 553)) (25271 5040 348174 869000) 0 nil])
([nil nil ((560 . 561) (556 . 560) (554 . 556) (551 . 554)) nil (25271 5367 862412 96000) 0 nil])
nil
([nil nil ((#("F" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -634) (undo-tree-id1158 . -1) (#("?" 0 1 (fontified t)) . -635) (undo-tree-id1159 . -1) 636 (634 . 636)) nil (25271 5367 862405 880000) 0 nil])
([nil nil ((572 . 573)) nil (25271 5367 862396 451000) 0 nil])
([nil nil ((#("    num_attributes_++;
" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 6 (fontified t) 6 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t)) . 936) (undo-tree-id1157 . -21) 957) nil (25271 5367 862392 51000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 938)) nil (25271 5367 862386 255000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -942) (undo-tree-id1149 . -1) 943 (942 . 943) (941 . 942) (#("{" 0 1 (fontified t)) . -941) (undo-tree-id1150 . -1) 942 (936 . 941) (#("			" 0 3 (fontified nil)) . 936) (undo-tree-id1151 . -3) (939 . 940) (#(" " 0 1 (fontified t)) . -939) (undo-tree-id1152 . -1) (#(" " 0 1 (fontified t)) . -940) (undo-tree-id1153 . -1) (#("{" 0 1 (fontified t)) . -941) (undo-tree-id1154 . -1) (#("}" 0 1 (fontified t)) . -942) (undo-tree-id1155 . -1) 943 (942 . 943) (936 . 941) (#(" " 0 1 (fontified nil)) . 936) (undo-tree-id1156 . -1) (937 . 938)) nil (25271 5367 862377 804000) 0 nil])
([nil nil ((934 . 935)) nil (25271 5367 862352 451000) 0 nil])
([nil nil ((937 . 939) (#("			  " 0 5 (fontified t)) . 937) 943) nil (25271 5367 862347 702000) 0 nil])
([nil nil ((#("num" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 856)) nil (25271 5367 862343 23000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 856)) nil (25271 5367 862339 671000) 0 nil])
([nil nil ((#("attributes" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . 856)) nil (25271 5367 862335 410000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 856)) nil (25271 5367 862331 988000) 0 nil])
([nil nil ((877 . 878) (867 . 877) (866 . 867) (865 . 866) (861 . 865) (859 . 861) (856 . 859) (#("s" 0 1 (fontified t)) . -856) (undo-tree-id1143 . -1) (#("i" 0 1 (fontified t)) . -857) (undo-tree-id1144 . -1) (#("z" 0 1 (fontified t)) . -858) (undo-tree-id1145 . -1) (#("e" 0 1 (fontified t)) . -859) (undo-tree-id1146 . -1) (#("(" 0 1 (fontified t)) . -860) (undo-tree-id1147 . -1) (#("a" 0 1 (fontified t)) . -861) (undo-tree-id1148 . -1) 862 (861 . 862) (860 . 861) (856 . 860)) nil (25271 5367 862324 794000) 0 nil])
([nil nil ((#("num" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 812)) nil (25271 5367 862303 912000) 0 nil])
([nil nil ((817 . 821) (815 . 817) (812 . 815)) nil (25271 5367 862300 490000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 821) (undo-tree-id1142 . 1)) nil (25271 5367 862295 671000) 0 nil])
([nil nil ((821 . 822)) nil (25271 5367 862289 944000) 0 nil])
([nil nil ((833 . 834)) nil (25271 5367 862286 661000) 0 nil])
([nil nil ((#("    attributes_.emplace_back(offset, size, dim);
" 0 4 (fontified t) 4 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t)) . 641) (undo-tree-id1141 . -47) 688) nil (25271 5367 862282 890000) 0 nil])
([nil nil ((nil rear-nonsticky nil 905 . 906) (#("
" 0 1 (fontified nil)) . -950) (901 . 951) 885) nil (25271 5367 862276 325000) 0 nil])
([nil nil ((965 . 966) (959 . 965) (957 . 959) (#("   " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 956) (undo-tree-id1140 . -3) (959 . 960) (956 . 959)) nil (25271 5367 862270 668000) 0 nil])
([nil nil ((nil rear-nonsticky nil 958 . 959) (#("
" 0 1 (fontified nil)) . -977) (956 . 978)) nil (25271 5367 862261 588000) 0 nil])
([nil nil ((1030 . 1032) (#("    " 0 4 (fontified nil)) . 1030) (undo-tree-id1134 . -4) (1034 . 1035) (1029 . 1034) (1026 . 1028) (#("    " 0 4 (fontified nil)) . 1026) (undo-tree-id1135 . -4) (1030 . 1031) (1025 . 1030) (1024 . 1025) (1012 . 1024) (1010 . 1012) (1006 . 1010) (1005 . 1006) (998 . 1005) (#("b" 0 1 (face font-lock-variable-name-face fontified t)) . -998) (undo-tree-id1136 . -1) 999 (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -999) (undo-tree-id1137 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -1000) (undo-tree-id1138 . -1) 1001 (994 . 1001) (#("^" 0 1 (fontified t)) . -994) (undo-tree-id1139 . -1) 995 (987 . 995)) nil (25271 5367 862251 671000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -1034) (undo-tree-id1133 . -2) 1036 (1033 . 1036)) nil (25271 5367 862223 106000) 0 nil])
([nil nil ((982 . 985) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -982) (undo-tree-id1132 . -1) 983 (980 . 983)) nil (25271 5367 862214 516000) 0 nil])
([nil nil ((#("U" 0 1 (face font-lock-function-name-face fontified t)) . -365) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -366) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -367) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -368) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -369) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -370) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (#("u" 0 1 (face font-lock-function-name-face fontified t)) . -371) (undo-tree-id1130 . -1) 372 (371 . 372) (nil fontified t 370 . 371) (nil fontified t 369 . 370) (nil c-type c-decl-id-start 369 . 370) (nil face font-lock-type-face 369 . 370) (nil fontified t 368 . 369) (nil face font-lock-type-face 368 . 369) (nil fontified t 367 . 368) (nil face font-lock-type-face 367 . 368) (nil fontified t 366 . 367) (nil face font-lock-type-face 366 . 367) (#("void " 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t)) . -360) (365 . 376) 365 (362 . 365) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -362) (undo-tree-id1131 . -1) 363 (360 . 363)) nil (25271 5367 862200 268000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1040) (undo-tree-id1117 . -4) 1044 (1039 . 1044)) nil (25271 5367 862158 294000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1044 . 1045) (#("
" 0 1 (fontified nil)) . -1132) (1040 . 1133)) nil (25271 5367 862141 671000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1044 . 1045) (#("
" 0 1 (fontified nil)) . -1245) (1040 . 1246)) nil (25271 5367 862136 852000) 0 nil])
([nil nil ((#("    auto dim = sizeof(vector)/sizeof(float);		
" 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (c-type c-decl-id-start face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 12 (face font-lock-variable-name-face fontified t) 12 15 (fontified t) 15 21 (face font-lock-keyword-face fontified t) 21 22 (fontified t) 22 28 (fontified t) 28 30 (fontified t) 30 36 (face font-lock-keyword-face fontified t) 36 37 (fontified t) 37 42 (face font-lock-type-face fontified t) 42 46 (fontified t) 46 47 (fontified t)) . 1041) (undo-tree-id1116 . -4) 1045) nil (25271 5367 862132 33000) 0 nil])
([nil nil ((#("std::size(container) * sizeof(vector);" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (face font-lock-keyword-face fontified t) 24 25 (face font-lock-keyword-face fontified t) 25 26 (face font-lock-keyword-face fontified t) 26 27 (face font-lock-keyword-face fontified t) 27 28 (face font-lock-keyword-face fontified t) 28 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t)) . 1057)) nil (25271 5367 862124 840000) 0 nil])
([nil nil ((1081 . 1082) (1068 . 1081) (#("(" 0 1 (fontified t)) . -1068) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) 1069 (1068 . 1069) (#("i" 0 1 (fontified t)) . -1068) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) 1069 (1063 . 1069) (#("t" 0 1 (fontified t)) . -1063) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) 1064 (1056 . 1064)) nil (25271 5367 862117 786000) 0 nil])
([nil nil ((#("std::size(attributes_) ? attributes_.back().offset_ + attributes_.back().size_  : 0;" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t)) . 1102) (undo-tree-id1103 . -84) (undo-tree-id1104 . -84) (undo-tree-id1105 . -22) (undo-tree-id1106 . -22)) nil (25271 5367 862092 434000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1130) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) 1131 (1129 . 1131) (1116 . 1129) (1102 . 1116)) nil (25271 5367 862065 265000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1131) (undo-tree-id1098 . -4) (undo-tree-id1099 . -4) 1135 (1130 . 1135)) nil (25271 5367 862046 758000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -241) (undo-tree-id51 . -2) 243 (240 . 243) (t 25271 5367 877464 497000) 238) nil (25278 44468 454735 742000) 0 nil])
([nil nil ((#("		 " 0 3 (fontified nil)) . -698) (undo-tree-id50 . -1) (692 . 698) 693) nil (25278 44468 454729 711000) 0 nil])
([nil nil ((#("		 " 0 3 (fontified nil)) . -710) (undo-tree-id49 . -1) (704 . 710) 705) nil (25278 44468 454724 732000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t face font-lock-function-name-face)) . -369) (undo-tree-id47 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -370) (undo-tree-id48 . -1) 371 (369 . 371)) nil (25278 44468 454719 662000) 0 nil])
([nil nil ((241 . 244)) nil (25278 44468 454713 741000) 0 nil])
([nil nil ((242 . 250) (#(" " 0 1 (fontified t)) . -242) (undo-tree-id43 . -1) (#(" " 0 1 (fontified t)) . -243) (undo-tree-id44 . -1) (#("s" 0 1 (fontified t)) . -244) (undo-tree-id45 . -1) 245 (244 . 245) (241 . 244) (#("s" 0 1 (fontified t)) . -241) (undo-tree-id46 . -1) 242 (241 . 242)) nil (25278 44468 454708 942000) 0 nil])
([nil nil ((#("struct A
" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face font-lock-type-face) 8 9 (fontified t)) . 242) (undo-tree-id42 . -7) 249) nil (25278 44468 454697 591000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t face font-lock-type-face)) . -268) (undo-tree-id36 . -1) (#("L" 0 1 (fontified t face font-lock-type-face)) . -269) (undo-tree-id37 . -1) 270 (267 . 270) (266 . 267) (255 . 266) (#(":" 0 1 (fontified t)) . -255) (undo-tree-id38 . -1) (#(" " 0 1 (fontified t)) . -256) (undo-tree-id39 . -1) 257 (256 . 257) (242 . 244) (253 . 254) (242 . 253) (#(" " 0 1 (fontified t)) . -242) (undo-tree-id40 . -1) (#(" " 0 1 (fontified t)) . -243) (undo-tree-id41 . -1) 244 (241 . 244)) nil (25278 44468 454690 388000) 0 nil])
([nil nil ((268 . 274)) nil (25278 44468 454642 448000) 0 nil])
([nil nil ((269 . 270) (#("l" 0 1 (fontified t face font-lock-type-face)) . 269)) nil (25278 44468 454639 282000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -240) (undo-tree-id34 . -1) 241 (240 . 241) (#("j" 0 1 (fontified t)) . -240) (undo-tree-id35 . -1) 241 (240 . 241) (276 . 277) (275 . 276) (274 . 275)) nil (25278 44468 454634 834000) 0 nil])
([nil nil ((329 . 330) (328 . 329) (319 . 328) (301 . 319) (300 . 301) (286 . 300) (#("gl_static_draw" 0 14 (fontified nil)) . -286) (nil fontified t 299 . 300) (nil fontified t 298 . 299) (nil fontified t 297 . 298) (nil fontified t 296 . 297) (#("GL_S" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -286) (290 . 304) 290 (289 . 290) (277 . 289) (#("G" 0 1 (fontified t face font-lock-variable-name-face)) . -277) (undo-tree-id8 . -1) (#("L" 0 1 (fontified t face font-lock-variable-name-face)) . -278) (undo-tree-id9 . -1) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -279) (undo-tree-id10 . -1) (#("S" 0 1 (fontified t face font-lock-variable-name-face)) . -280) (undo-tree-id11 . -1) (#("T" 0 1 (fontified t face font-lock-variable-name-face)) . -281) (undo-tree-id12 . -1) 282 (#("A" 0 1 (fontified t face font-lock-variable-name-face)) . -282) (undo-tree-id13 . -1) (#("T" 0 1 (fontified t face font-lock-variable-name-face)) . -283) (undo-tree-id14 . -1) (#("I" 0 1 (fontified t face font-lock-variable-name-face)) . -284) (undo-tree-id15 . -1) (#("C" 0 1 (fontified t face font-lock-variable-name-face)) . -285) (undo-tree-id16 . -1) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -286) (undo-tree-id17 . -1) (#("D" 0 1 (fontified t face font-lock-variable-name-face)) . -287) (undo-tree-id18 . -1) (#("R" 0 1 (fontified t face font-lock-variable-name-face)) . -288) (undo-tree-id19 . -1) (#("A" 0 1 (fontified t face font-lock-variable-name-face)) . -289) (undo-tree-id20 . -1) (#("W" 0 1 (fontified t face font-lock-variable-name-face)) . -290) (undo-tree-id21 . -1) (#("," 0 1 (fontified t c-type c-decl-id-start)) . -291) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t)) . -292) (undo-tree-id23 . -1) (#("G" 0 1 (fontified t face font-lock-variable-name-face)) . -293) (undo-tree-id24 . -1) (#("L" 0 1 (fontified t face font-lock-variable-name-face)) . -294) (undo-tree-id25 . -1) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -295) (undo-tree-id26 . -1) (#("D" 0 1 (fontified t face font-lock-variable-name-face)) . -296) (undo-tree-id27 . -1) (#("Y" 0 1 (fontified t face font-lock-variable-name-face)) . -297) (undo-tree-id28 . -1) (#("N" 0 1 (fontified t face font-lock-variable-name-face)) . -298) (undo-tree-id29 . -1) (#("A" 0 1 (fontified t face font-lock-variable-name-face)) . -299) (undo-tree-id30 . -1) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -300) (undo-tree-id31 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -301) (undo-tree-id32 . -1) (#("c" 0 1 (fontified t face font-lock-variable-name-face)) . -302) (undo-tree-id33 . -1) 303 (298 . 303) (293 . 298) (292 . 293) (291 . 292) (277 . 291) (#("gl_static_draw" 0 14 (fontified nil)) . -277) (nil fontified t 290 . 291) (nil face font-lock-variable-name-face 290 . 291) (nil fontified t 289 . 290) (nil face font-lock-variable-name-face 289 . 290) (nil fontified t 288 . 289) (nil face font-lock-variable-name-face 288 . 289) (nil fontified t 287 . 288) (nil face font-lock-variable-name-face 287 . 288) (nil fontified t 286 . 287) (nil face font-lock-variable-name-face 286 . 287) (nil fontified t 285 . 286) (nil face font-lock-variable-name-face 285 . 286) (#("GL_STA" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t face font-lock-variable-name-face)) . -277) (283 . 297) 283 (277 . 283)) nil (25278 44468 454611 280000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -242) (undo-tree-id7 . -2) 244) nil (25278 44468 454537 391000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -277) (undo-tree-id6 . -1) 278 (277 . 278) (275 . 277) (#(" " 0 1 (fontified nil)) . 275) (274 . 275)) nil (25278 44468 454532 382000) 0 nil])
([nil nil ((508 . 509) (490 . 508) (489 . 490) (#(")" 0 1 (fontified t)) . -489) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 490) nil (25278 44468 456108 901000) 0 nil])
([nil nil ((846 . 847) (845 . 846) (838 . 845) (#("GL_STATIC_DRAW);" 0 3 (fontified t) 3 9 (fontified t) 9 11 (fontified t) 11 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t)) . 839) (undo-tree-id146 . -3) (undo-tree-id147 . -3) 842) nil (25278 60843 7726 605000) 0 nil] [nil nil ((#("STATIC_DRAW);
    " 0 6 (fontified nil) 6 8 (fontified nil) 8 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 18 (fontified nil)) . 842) (undo-tree-id0 . -11) (undo-tree-id1 . -2) (855 . 860) 842) ((#("
    " 0 5 (fontified nil)) . 855) (842 . 860)) (25278 44468 454507 886000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t)) . 1318)) nil (25278 60843 7723 890000) 0 nil])
nil
([nil nil ((#("L" 0 1 (fontified t)) . 1318)) nil (25278 60843 7722 668000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 1318)) nil (25278 60843 7721 756000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . 1318)) nil (25278 60843 7720 444000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . 1318)) nil (25278 60843 7719 432000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . 1318)) nil (25278 60843 7718 480000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . 1318)) nil (25278 60843 7717 408000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . 1318)) nil (25278 60843 7716 256000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t)) . 1318)) nil (25278 60843 7715 24000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 1318) (undo-tree-id145 . -1)) nil (25278 60843 7713 882000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . 1318)) nil (25278 60843 7711 868000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t)) . 1318)) nil (25278 60843 7710 756000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . 1318)) nil (25278 60843 7709 714000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . 1318)) nil (25278 60843 7708 572000) 0 nil])
([nil nil ((1333 . 1340) (1332 . 1333) (1297 . 1303) (#("		 " 0 3 (fontified nil)) . 1297) (1328 . 1329) (1318 . 1328)) nil (25278 60843 7707 49000) 0 nil])
([nil nil ((#("		 " 0 3 (fontified nil)) . -1294) (1288 . 1294) 1295) nil (25278 60843 7704 865000) 0 nil])
([nil nil ((258 . 259) (257 . 258) (240 . 257) (#("s" 0 1 (fontified t)) . -240) (undo-tree-id139 . -1) (#("t" 0 1 (fontified t)) . -241) (undo-tree-id140 . -1) (#("d" 0 1 (fontified t)) . -242) (undo-tree-id141 . -1) (#(":" 0 1 (fontified t c-type c-decl-end)) . -243) (undo-tree-id142 . -1) (#(":" 0 1 (fontified t)) . -244) (undo-tree-id143 . -1) (#("D" 0 1 (fontified t)) . -245) (undo-tree-id144 . -1) 246 (245 . 246) (238 . 240) (242 . 243) (#("  " 0 2 (fontified nil)) . 238) (243 . 244) (240 . 243) (237 . 240) 220) nil (25278 60843 7701 979000) 0 nil])
([nil nil ((#("enum class DrawMethod : GLenum {
  Static = GL_STATIC_DRAW, Dynamic = GL_DYNAMIC_DRAW };
" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t face font-lock-keyword-face c-type c-decl-type-start) 10 11 (fontified t) 11 12 (fontified t face font-lock-type-face) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t face font-lock-type-face) 14 15 (fontified t face font-lock-type-face) 15 16 (fontified t face font-lock-type-face) 16 17 (fontified t face font-lock-type-face) 17 18 (fontified t face font-lock-type-face) 18 19 (fontified t face font-lock-type-face) 19 20 (fontified t face font-lock-type-face) 20 21 (fontified t face font-lock-type-face) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t face font-lock-type-face) 25 26 (fontified t face font-lock-type-face) 26 27 (fontified t face font-lock-type-face) 27 28 (fontified t face font-lock-type-face) 28 29 (fontified t face font-lock-type-face) 29 30 (fontified t face font-lock-type-face) 30 31 (fontified t) 31 32 (fontified t c-type c-not-decl) 32 33 (fontified t) 33 35 (fontified t) 35 36 (fontified t face font-lock-variable-name-face) 36 37 (fontified t face font-lock-variable-name-face) 37 38 (fontified t face font-lock-variable-name-face) 38 39 (fontified t face font-lock-variable-name-face) 39 40 (fontified t face font-lock-variable-name-face) 40 41 (fontified t face font-lock-variable-name-face) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 58 (fontified t) 58 59 (fontified t c-type c-decl-id-start) 59 60 (fontified t) 60 61 (fontified t face font-lock-variable-name-face) 61 62 (fontified t face font-lock-variable-name-face) 62 63 (fontified t face font-lock-variable-name-face) 63 64 (fontified t face font-lock-variable-name-face) 64 65 (fontified t face font-lock-variable-name-face) 65 66 (fontified t face font-lock-variable-name-face) 66 67 (fontified t face font-lock-variable-name-face) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t)) . 264) (undo-tree-id137 . -40) (undo-tree-id138 . -20) 284) nil (25278 60843 7694 796000) 0 nil])
([nil nil ((nil rear-nonsticky nil 152 . 153) (#("
" 0 1 (fontified nil)) . -241) (152 . 242)) nil (25278 60843 7692 261000) 0 nil])
([nil nil ((243 . 245) (#("  " 0 2 (fontified nil)) . 242) (undo-tree-id136 . -2) (244 . 245) (241 . 244) 186) nil (25278 60843 7690 838000) 0 nil])
([nil nil ((#("{{{
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 242) (undo-tree-id134 . 1) (undo-tree-id135 . -2) 244) nil (25278 60843 7688 785000) 0 nil])
([nil nil ((242 . 244) (242 . 243) 244) nil (25278 60843 7686 781000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 355) (undo-tree-id133 . -1)) nil (25278 60843 7685 268000) 0 nil])
([nil nil ((1089 . 1096) (1088 . 1089)) nil (25278 60843 7682 934000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1277 . 1278) (#("
" 0 1 (fontified nil)) . -1320) (1273 . 1321) 1272) nil (25278 60843 7681 561000) 0 nil])
([nil nil ((#("offset " 0 6 (fontified t face font-lock-variable-name-face) 6 7 (fontified t)) . 1283)) nil (25278 60843 7679 938000) 0 nil])
([nil nil ((1283 . 1290)) nil (25278 60843 7678 866000) 0 nil])
([nil nil ((#("offset" 0 6 (fontified t)) . 1312)) nil (25278 60843 7677 584000) 0 nil])
([nil nil ((1312 . 1318)) nil (25278 60843 7675 690000) 0 nil])
([nil nil ((#("DrawMethod::Dynamic)" 0 1 (fontified t face font-lock-constant-face) 1 2 (fontified t face font-lock-constant-face) 2 3 (fontified t face font-lock-constant-face) 3 4 (fontified t face font-lock-constant-face) 4 5 (fontified t face font-lock-constant-face) 5 6 (fontified t face font-lock-constant-face) 6 7 (fontified t face font-lock-constant-face) 7 8 (fontified t face font-lock-constant-face) 8 9 (fontified t face font-lock-constant-face) 9 10 (fontified t face font-lock-constant-face) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t)) . 1403)) nil (25278 60843 7674 257000) 0 nil])
([nil nil ((1409 . 1410) (1403 . 1409)) nil (25278 60843 7673 266000) 0 nil])
([nil nil ((552 . 553) (547 . 552) (545 . 547) (539 . 545) (#(":" 0 1 (fontified t)) . -539) (undo-tree-id127 . -1) 540 (539 . 540) (532 . 539) (#("=" 0 1 (fontified t)) . -532) (undo-tree-id128 . -1) 533 (532 . 533) (#(" " 0 1 (fontified t)) . -532) (undo-tree-id129 . -1) (#("=" 0 1 (fontified t)) . -533) (undo-tree-id130 . -1) 534 (533 . 534) (#("=" 0 1 (fontified t)) . -533) (undo-tree-id131 . -1) (#(" " 0 1 (fontified t)) . -534) (undo-tree-id132 . -1) 535 (532 . 535)) nil (25278 60843 7670 330000) 0 nil])
([nil nil ((1501 . 1502)) nil (25278 60843 7661 914000) 0 nil])
([nil nil ((#("," 0 1 (fontified t c-type c-decl-arg-start)) . 1501)) nil (25278 60843 7660 632000) 0 nil])
([nil nil ((#("     
" 0 6 (fontified t)) . 1706) (undo-tree-id126 . -4) 1710) nil (25278 60843 7659 309000) 0 nil])
([nil nil ((1542 . 1543) (1536 . 1542) (1534 . 1536) (1515 . 1534) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -1515) (undo-tree-id120 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1516) (undo-tree-id121 . -1) (#("h" 0 1 (fontified t face font-lock-variable-name-face)) . -1517) (undo-tree-id122 . -1) 1518 (1502 . 1518) (#("G" 0 1 (fontified t)) . -1502) (undo-tree-id123 . -1) 1503 (1502 . 1503) (1501 . 1502) (#(")" 0 1 (fontified t)) . -1501) (undo-tree-id124 . 1) (undo-tree-id125 . -1) 1502) nil (25278 60843 7655 162000) 0 nil])
([nil nil ((1708 . 1715) (1707 . 1708)) nil (25278 60843 7646 886000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1723) (undo-tree-id115 . -1) (#(" " 0 1 (fontified t)) . -1724) (undo-tree-id116 . -1) (#(" " 0 1 (fontified t)) . -1725) (undo-tree-id117 . -1) (#(" " 0 1 (fontified t)) . -1726) (undo-tree-id118 . -1) (#(" " 0 1 (fontified t)) . -1727) (undo-tree-id119 . -1) 1728 (1723 . 1728) 1707) nil (25278 60843 7644 11000) 0 nil])
([nil nil ((1707 . 1711)) nil (25278 60843 7637 28000) 0 nil])
([nil nil ((#("..., " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 1708) (undo-tree-id114 . 2)) nil (25278 60843 7636 26000) 0 nil])
([nil nil ((1709 . 1710) (1708 . 1709)) nil (25278 60843 7634 82000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 1717)) nil (25278 60843 7632 690000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1717)) nil (25278 60843 7631 487000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1717)) nil (25278 60843 7630 696000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1717)) nil (25278 60843 7629 764000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1717)) nil (25278 60843 7628 943000) 0 nil])
([nil nil ((1689 . 1690) (1688 . 1689) (1685 . 1688) (#("," 0 1 (fontified t)) . -1685) (undo-tree-id113 . -1) 1686 (1685 . 1686)) nil (25278 60843 7627 49000) 0 nil])
([nil nil ((470 . 471) (464 . 470) (#("_" 0 1 (fontified t)) . -464) (undo-tree-id108 . -1) (#(" " 0 1 (fontified t)) . -465) (undo-tree-id109 . -1) (#("s" 0 1 (fontified t)) . -466) (undo-tree-id110 . -1) (#("i" 0 1 (fontified t)) . -467) (undo-tree-id111 . -1) (#("z" 0 1 (fontified t)) . -468) (undo-tree-id112 . -1) 469 (460 . 469) (453 . 455) (457 . 458) (#("  " 0 1 (fontified nil) 1 2 (fontified nil)) . 453) (458 . 459) (453 . 458)) nil (25278 60843 7623 152000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -472) (undo-tree-id107 . -2) 474 (471 . 474) 470) nil (25278 60843 7615 928000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -670) (undo-tree-id97 . -1) 671 (663 . 671) (#("s" 0 1 (fontified t)) . -663) (undo-tree-id98 . -1) (#("t" 0 1 (fontified t)) . -664) (undo-tree-id99 . -1) (#("d" 0 1 (fontified t)) . -665) (undo-tree-id100 . -1) (#(":" 0 1 (fontified t c-type c-decl-end)) . -666) (undo-tree-id101 . -1) (#(":" 0 1 (fontified t)) . -667) (undo-tree-id102 . -1) (#("s" 0 1 (fontified t)) . -668) (undo-tree-id103 . -1) (#("i" 0 1 (fontified t)) . -669) (undo-tree-id104 . -1) (#("z" 0 1 (fontified t)) . -670) (undo-tree-id105 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -671) (undo-tree-id106 . -1) 672 (668 . 672) (659 . 663) (#("  " 0 2 (fontified nil)) . 659) (665 . 666) (659 . 661) (#("    " 0 4 (fontified nil)) . 659) (666 . 667) (663 . 666) (659 . 663) (659 . 660) 663) nil (25278 60843 7610 508000) 0 nil])
([nil nil ((#("    size_ =
" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t)) . 659) (undo-tree-id95 . 1) (undo-tree-id96 . -10) 669) nil (25278 60843 7431 333000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1821 . 1822) (#("
" 0 1 (fontified nil)) . -1864) (1819 . 1865) 1814) nil (25278 60843 7428 307000) 0 nil])
([nil nil ((#("std" 0 3 (fontified t face font-lock-constant-face)) . 1822)) nil (25278 60843 7426 855000) 0 nil])
([nil nil ((#("::" 0 2 (fontified t)) . 1822)) nil (25278 60843 7425 562000) 0 nil])
([nil nil ((#("size" 0 4 (fontified t face font-lock-type-face)) . 1822)) nil (25278 60843 7424 721000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-type-face)) . -1822) (undo-tree-id94 . -1) 1823 (1822 . 1823)) nil (25278 60843 7423 408000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-type-face)) . 1822) (undo-tree-id93 . 1)) nil (25278 60843 7421 485000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . 1822) (undo-tree-id92 . 1)) nil (25278 60843 7419 962000) 0 nil])
([nil nil ((1822 . 1826)) nil (25278 60843 7418 539000) 0 nil])
([nil nil ((1827 . 1830)) nil (25278 60843 7417 808000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1835) (undo-tree-id85 . -1) (#("u" 0 1 (fontified t)) . -1836) (undo-tree-id86 . -1) (#("t" 0 1 (fontified t)) . -1837) (undo-tree-id87 . -1) (#("o" 0 1 (fontified t face font-lock-keyword-face)) . -1838) (undo-tree-id88 . -1) (#("." 0 1 (fontified t)) . -1839) (undo-tree-id89 . -1) (#("." 0 1 (fontified t)) . -1840) (undo-tree-id90 . -1) (#("." 0 1 (fontified t)) . -1841) (undo-tree-id91 . -1) 1842 (1835 . 1842)) nil (25278 60843 7415 483000) 0 nil])
([nil nil ((1820 . 1844) 1834) nil (25278 60843 7409 172000) 0 nil])
([nil nil ((1859 . 1864) (#("c" 0 1 (fontified t)) . -1859) (undo-tree-id70 . -1) (#("o" 0 1 (fontified t)) . -1860) (undo-tree-id71 . -1) (#("n" 0 1 (fontified t)) . -1861) (undo-tree-id72 . -1) (#("s" 0 1 (fontified t)) . -1862) (undo-tree-id73 . -1) (#("t" 0 1 (fontified t face font-lock-keyword-face)) . -1863) (undo-tree-id74 . -1) (#(" " 0 1 (fontified t)) . -1864) (undo-tree-id75 . -1) (#("C" 0 1 (fontified t face font-lock-type-face)) . -1865) (undo-tree-id76 . -1) (#("&" 0 1 (fontified t)) . -1866) (undo-tree-id77 . -1) (#(" " 0 1 (fontified t)) . -1867) (undo-tree-id78 . -1) (#("." 0 1 (fontified t)) . -1868) (undo-tree-id79 . -1) (#("." 0 1 (fontified t)) . -1869) (undo-tree-id80 . -1) (#("." 0 1 (fontified t)) . -1870) (undo-tree-id81 . -1) (#(" " 0 1 (fontified t)) . -1871) (undo-tree-id82 . -1) (#("c" 0 1 (fontified t face font-lock-variable-name-face)) . -1872) (undo-tree-id83 . -1) 1873 (1867 . 1873) (1859 . 1867) (#("C" 0 1 (fontified t face font-lock-type-face)) . -1859) (undo-tree-id84 . -1) 1860 (1859 . 1860)) nil (25278 60843 7404 874000) 0 nil])
([nil nil ((#("  template <class ...C>
" 0 1 (fontified t) 1 2 (fontified t) 2 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 12 (category c-<-as-paren-syntax fontified t) 12 17 (fontified t face font-lock-keyword-face) 17 21 (fontified t) 21 22 (fontified t face font-lock-type-face) 22 23 (category c->-as-paren-syntax fontified t) 23 24 (fontified t)) . 1820) (undo-tree-id67 . -24) (undo-tree-id68 . -23) (undo-tree-id69 . -19) 1839) nil (25278 60843 7389 345000) 0 nil])
([nil nil ((#("  void SetSize(const) const { return size_; }
" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (fontified t) 7 8 (fontified t face font-lock-function-name-face) 8 9 (fontified t face font-lock-function-name-face) 9 10 (fontified t face font-lock-function-name-face) 10 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t c-type c-decl-arg-start) 15 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t face font-lock-keyword-face) 17 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t face font-lock-keyword-face) 19 20 (fontified t face font-lock-keyword-face) 20 21 (fontified t) 21 22 (fontified t) 22 24 (fontified t face font-lock-keyword-face) 24 26 (fontified t face font-lock-keyword-face) 26 27 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 27 30 (fontified t) 30 33 (fontified t face font-lock-keyword-face) 33 36 (fontified t face font-lock-keyword-face) 36 45 (fontified t) 45 46 (fontified t)) . 1820) (undo-tree-id64 . 26) (undo-tree-id65 . -19) (undo-tree-id66 . -45) 1839) nil (25278 60843 7385 467000) 0 nil])
([nil nil ((746 . 747) (745 . 746) (736 . 745) (735 . 736) (#(")" 0 1 (fontified t)) . -735) (undo-tree-id58 . -1) (#("c" 0 1 (fontified t)) . -736) (undo-tree-id59 . -1) 737 (736 . 737) (735 . 736) (731 . 735) (729 . 731) (718 . 729) (#("a" 0 1 (fontified t)) . -718) (undo-tree-id60 . -1) (#("u" 0 1 (fontified t)) . -719) (undo-tree-id61 . -1) (#("t" 0 1 (fontified t)) . -720) (undo-tree-id62 . -1) (#("o" 0 1 (fontified t face font-lock-keyword-face)) . -721) (undo-tree-id63 . -1) 722 (718 . 722) (713 . 718) 678) nil (25278 60843 7379 887000) 0 nil])
([nil nil ((472 . 474) (#("0" 0 1 (fontified t)) . -472) (undo-tree-id57 . -1) 473 (470 . 473)) nil (25278 60843 7370 569000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 471)) nil (25278 60843 7367 694000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 471)) nil (25278 60843 7366 692000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -473) (undo-tree-id53 . -1) 474 (473 . 474) (#("
" 0 1 (fontified t)) . -473) (undo-tree-id54 . -1) (#(" " 0 1 (fontified t)) . -474) (undo-tree-id55 . -1) (#(" " 0 1 (fontified t)) . -475) (undo-tree-id56 . -1) 476 (473 . 476) 471) nil (25278 60843 7364 668000) 0 nil])
([nil nil ((471 . 474)) nil (25278 60843 7359 88000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 470)) nil (25278 60843 7357 946000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 470)) nil (25278 60843 7356 924000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 470)) nil (25278 60843 7355 291000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 470)) nil (25278 60843 7354 169000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-variable-name-face)) . 470) (undo-tree-id52 . 1)) nil (25278 60843 7352 15000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1257)) nil (25278 60843 7335 53000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 1438) (t 25278 60843 64416 856000)) nil (25278 60865 203881 16000) 0 nil])
([nil nil ((1438 . 1439)) nil (25278 60865 203874 865000) 0 nil])
([nil nil ((#("offset" 0 6 (fontified t face font-lock-type-face)) . -1432) (undo-tree-id148 . -6) (undo-tree-id149 . -6) 1438 (#("," 0 1 (fontified t)) . -1438) (undo-tree-id150 . -1) 1439 (t 25278 60865 213901 15000)) nil (25280 19393 79671 500000) 0 nil])
([nil nil ((464 . 466)) nil (25280 19393 79509 336000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face font-lock-type-face)) . 1555) (t 25280 19393 136079 560000)) nil (25280 19443 588960 695000) 0 nil])
([nil nil ((#("length" 0 6 (fontified t face font-lock-variable-name-face)) . 301) (t 25280 19443 600952 224000)) nil (25280 19626 994978 9000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -305) (undo-tree-id152 . -1) 306 (301 . 306)) nil (25280 19626 994975 505000) 0 nil])
([nil nil ((899 . 900) (#(";" 0 1 (fontified t)) . -899) (undo-tree-id151 . -1) 900) nil (25280 19626 994969 143000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1958) (undo-tree-id0 . -1) (#("d" 0 1 (fontified t)) . -1959) (undo-tree-id1 . -1) (#("d" 0 1 (fontified t)) . -1960) (undo-tree-id2 . -1) 1961 (1958 . 1961) (t 25280 19627 6822 892000)) nil (25280 27699 119443 826000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 1757) (t 25280 27699 176041 269000)) nil (25280 28661 743531 168000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1757)) nil (25280 28661 743527 542000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 1757)) nil (25280 28661 743523 855000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1757)) nil (25280 28661 743520 889000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 1757)) nil (25280 28661 743517 954000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 1757)) nil (25280 28661 743515 780000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 1757)) nil (25280 28661 743513 535000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 1757)) nil (25280 28661 743511 321000) 0 nil])
([nil nil ((#("DrawMethod method = DrawMethod::Static" 0 10 (fontified t face font-lock-type-face) 10 11 (fontified t) 11 17 (fontified t face font-lock-variable-name-face) 17 20 (fontified t) 20 28 (fontified t face font-lock-constant-face) 28 30 (fontified t face font-lock-constant-face) 30 38 (fontified t)) . 1548) (undo-tree-id2 . -8) (undo-tree-id3 . -8)) nil (25280 28661 743508 125000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1550) (undo-tree-id0 . -4) (undo-tree-id1 . -4) 1554 (1549 . 1554) 1524) nil (25280 28661 746912 685000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1561 . 1562) (nil fontified nil 1524 . 1562) (nil fontified t 1524 . 1562) (1524 . 1562)) nil (25280 28698 802881 836000) 0 nil] [nil nil ((nil rear-nonsticky nil 1562 . 1563) (nil fontified nil 1525 . 1563) (1525 . 1563) 1524) ((#("DrawMethod method = DrawMethod::Static" 0 10 (fontified nil face font-lock-type-face) 10 11 (fontified nil) 11 17 (fontified nil face font-lock-variable-name-face) 17 20 (fontified nil) 20 30 (fontified nil face font-lock-constant-face) 30 37 (fontified nil) 37 38 (fontified nil rear-nonsticky nil)) . 1525) (undo-tree-id4 . -37) (undo-tree-id5 . -37) (undo-tree-id6 . -37) (nil rear-nonsticky t 1562 . 1563)) (25280 28661 743453 162000) 0 nil])
([nil nil ((1563 . 1564) (1562 . 1563)) nil (25280 28698 802880 323000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 1541)) nil (25280 28698 802879 141000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 1541)) nil (25280 28698 802877 948000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1541)) nil (25280 28698 802876 816000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t face font-lock-constant-face)) . 1541)) nil (25280 28698 802875 704000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-constant-face)) . 1541)) nil (25280 28698 802874 622000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-constant-face)) . 1541)) nil (25280 28698 802873 680000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face font-lock-constant-face)) . 1541)) nil (25280 28698 802872 869000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t face font-lock-constant-face)) . 1541)) nil (25280 28698 802871 917000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-constant-face)) . 1541)) nil (25280 28698 802871 66000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-constant-face)) . 1541)) nil (25280 28698 802869 653000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face font-lock-constant-face)) . 1541)) nil (25280 28698 802868 541000) 0 nil])
([nil nil ((#("o" 0 1 (fontified nil face font-lock-constant-face)) . 1541)) nil (25280 28698 802867 519000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-constant-face)) . 1541)) nil (25280 28698 802866 737000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . 1541)) nil (25280 28698 802865 766000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . 1541)) nil (25280 28698 802864 854000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t face font-lock-variable-name-face)) . 1541)) nil (25280 28698 802863 962000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . 1541)) nil (25280 28698 802862 469000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-variable-name-face)) . 1541)) nil (25280 28698 802860 886000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . 1541)) nil (25280 28698 802859 915000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-variable-name-face)) . 1541) (undo-tree-id8 . -1)) nil (25280 28698 802858 793000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t rear-nonsticky t face font-lock-variable-name-face)) . 1541)) nil (25280 28698 802856 689000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1569)) nil (25280 28698 802855 356000) 0 nil])
([nil nil ((#("," 0 1 (fontified t c-type c-decl-arg-start)) . 1565)) nil (25280 28698 802854 94000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1565)) nil (25280 28698 802852 882000) 0 nil])
([nil nil ((1737 . 1743) (1736 . 1737) (#("m" 0 1 (fontified t)) . -1736) (undo-tree-id7 . -1) 1737 (1736 . 1737)) nil (25280 28698 802850 727000) 0 nil])
([nil nil ((1737 . 1738)) nil (25280 28698 802834 637000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 935) (t 25280 28698 858703 64000)) nil (25280 33766 237139 771000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 935)) nil (25280 33766 237136 84000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 935)) nil (25280 33766 237133 639000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 935)) nil (25280 33766 237131 495000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 935)) nil (25280 33766 237129 281000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 935)) nil (25280 33766 237127 77000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 935)) nil (25280 33766 237124 823000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 935)) nil (25280 33766 237122 438000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 1459)) nil (25280 33766 237119 964000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1459)) nil (25280 33766 237117 389000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 1459)) nil (25280 33766 237115 5000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1459)) nil (25280 33766 237112 340000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 1459)) nil (25280 33766 237110 276000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 1459)) nil (25280 33766 237107 891000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 1459)) nil (25280 33766 237105 397000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 1459)) nil (25280 33766 237102 742000) 0 nil])
([nil nil ((nil rear-nonsticky nil 355 . 356) (#("
" 0 1 (fontified nil)) . -660) (355 . 661) 354) nil (25280 33766 237099 636000) 0 nil])
([nil nil ((#("inline " 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t)) . 356)) nil (25280 33766 237095 268000) 0 nil])
([nil nil ((#("unsigned " 0 8 (fontified t face font-lock-type-face) 8 9 (fontified t)) . 356)) nil (25280 33766 237092 412000) 0 nil])
([nil nil ((#("long  " 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 6 (fontified t)) . 356)) nil (25280 33766 237088 916000) 0 nil])
([nil nil ((361 . 368) (359 . 361) (356 . 359)) nil (25280 33766 237086 211000) 0 nil])
([nil nil ((356 . 363)) nil (25280 33766 239194 284000) 0 nil])
([nil nil ((#("Vector" 0 6 (fontified t face font-lock-type-face)) . 441)) nil (25280 34777 163127 994000) 0 nil] [nil nil ((#("Vector" 0 6 (fontified t face font-lock-type-face)) . 441)) ((441 . 447)) (25280 33766 237070 792000) 0 nil])
([nil nil ((441 . 450)) nil (25280 34777 163125 860000) 0 nil])
nil
([nil nil ((#("Vectors" 0 7 (fontified t face font-lock-type-face)) . 468)) nil (25280 34777 163123 636000) 0 nil])
([nil nil ((468 . 478)) nil (25280 34777 163121 632000) 0 nil])
([nil nil ((#("std" 0 3 (fontified t face font-lock-constant-face)) . 521)) nil (25280 34777 163119 448000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . 521)) nil (25280 34777 163116 793000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . 521)) nil (25280 34777 163114 519000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-type-face)) . 521)) nil (25280 34777 163112 325000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-type-face)) . 521)) nil (25280 34777 163109 990000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-type-face)) . 521)) nil (25280 34777 163107 425000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-type-face)) . 521)) nil (25280 34777 163104 680000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-keyword-face)) . 521)) nil (25280 34777 163102 576000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-type-face)) . 521)) nil (25280 34777 163100 332000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . 521)) nil (25280 34777 163098 38000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t face font-lock-type-face)) . 521)) nil (25280 34777 163095 974000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-type-face)) . 521)) nil (25280 34777 163093 439000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-type-face)) . 521)) nil (25280 34777 163091 195000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-type-face)) . 521)) nil (25280 34777 163089 51000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-keyword-face)) . 521)) nil (25280 34777 163086 847000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-type-face)) . 521)) nil (25280 34777 163084 382000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 521)) nil (25280 34777 163082 138000) 0 nil])
([nil nil ((525 . 530) (521 . 525)) nil (25280 34777 163079 954000) 0 nil])
([nil nil ((#("vectors" 0 7 (fontified t face font-lock-variable-name-face)) . 532)) nil (25280 34777 163077 269000) 0 nil])
([nil nil ((532 . 541) (#("C" 0 1 (fontified t face font-lock-variable-name-face)) . -532) (undo-tree-id30 . -1) 533 (532 . 533)) nil (25280 34777 163073 793000) 0 nil])
([nil nil ((#("MoreVectors" 0 11 (fontified t face font-lock-type-face)) . 543)) nil (25280 34777 163068 493000) 0 nil])
([nil nil ((555 . 557) (543 . 555)) nil (25280 34777 163066 349000) 0 nil])
([nil nil ((#("more" 0 4 (fontified t face font-lock-variable-name-face)) . 561)) nil (25280 34777 163063 644000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-variable-name-face)) . 561) (undo-tree-id29 . 1)) nil (25280 34777 163061 389000) 0 nil])
([nil nil ((#("vectors" 0 7 (fontified t face font-lock-variable-name-face)) . 561) (undo-tree-id28 . 7)) nil (25280 34777 163057 512000) 0 nil])
([nil nil ((561 . 565)) nil (25280 34777 163053 785000) 0 nil])
([nil nil ((587 . 588) (583 . 587) (582 . 583) (569 . 571) (#("    " 0 4 (fontified nil)) . 569) (583 . 584) (580 . 583)) nil (25280 34777 163050 569000) 0 nil])
([nil nil ((595 . 596)) nil (25280 34777 163045 890000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 596) (undo-tree-id27 . 1)) nil (25280 34777 163043 686000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 596) (undo-tree-id26 . 1)) nil (25280 34777 163039 899000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 596) (undo-tree-id25 . 1)) nil (25280 34777 163036 12000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . 596) (undo-tree-id24 . 1)) nil (25280 34777 163032 145000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 596) (undo-tree-id23 . 1)) nil (25280 34777 163028 167000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 596) (undo-tree-id22 . 1)) nil (25280 34777 163023 659000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 596) (undo-tree-id21 . 1)) nil (25280 34777 163019 601000) 0 nil])
([nil nil ((#("Vector" 0 6 (fontified t)) . 604)) nil (25280 34777 163015 744000) 0 nil])
([nil nil ((622 . 625) (#("p" 0 1 (fontified t)) . -622) (undo-tree-id15 . -1) 623 (615 . 623) (613 . 615) (604 . 613) (#("c" 0 1 (fontified t)) . -604) (undo-tree-id16 . -1) (#("o" 0 1 (fontified t)) . -605) (undo-tree-id17 . -1) (#("n" 0 1 (fontified t)) . -606) (undo-tree-id18 . -1) (#("t" 0 1 (fontified t)) . -607) (undo-tree-id19 . -1) (#("a" 0 1 (fontified t)) . -608) (undo-tree-id20 . -1) 609 (604 . 609)) nil (25280 34777 163009 162000) 0 nil])
([nil nil ((#("inline std::size_t CalculateBufferSize(GLchar){     return 0;   }
" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face font-lock-constant-face) 8 9 (fontified t face font-lock-constant-face) 9 10 (fontified t face font-lock-constant-face) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t face font-lock-type-face) 14 15 (fontified t face font-lock-type-face) 15 16 (fontified t face font-lock-type-face) 16 17 (fontified t face font-lock-type-face) 17 18 (fontified t c-type c-decl-id-start face font-lock-type-face) 18 19 (fontified t) 19 38 (fontified t face font-lock-function-name-face) 38 39 (fontified t c-type c-decl-arg-start) 39 47 (fontified t) 47 52 (fontified t) 52 58 (fontified t face font-lock-keyword-face) 58 66 (fontified t)) . 356) (undo-tree-id14 . -58) 414) nil (25280 34777 162990 356000) 0 nil])
([nil nil ((#("typename " 0 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t)) . 366)) nil (25280 34777 162985 958000) 0 nil])
([nil nil ((#("Container" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 366)) nil (25280 34777 162983 724000) 0 nil])
([nil nil ((#("," 0 1 (fontified t c-type c-<>-arg-sep)) . 366)) nil (25280 34777 162981 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 366)) nil (25280 34777 162979 196000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t face font-lock-type-face)) . 378)) nil (25280 34777 162977 122000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-type-face)) . 378)) nil (25280 34777 162975 118000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-type-face)) . 378)) nil (25280 34777 162973 154000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-type-face)) . 378)) nil (25280 34777 162971 90000) 0 nil])
([nil nil ((440 . 441)) nil (25280 34777 162969 217000) 0 nil])
([nil nil ((#("MoreContainers" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t face font-lock-type-face) 6 7 (fontified t face font-lock-type-face) 7 8 (fontified t face font-lock-type-face) 8 9 (fontified t face font-lock-type-face) 9 10 (fontified t face font-lock-type-face) 10 11 (fontified t face font-lock-type-face) 11 12 (fontified t face font-lock-type-face) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t face font-lock-type-face)) . 454)) nil (25280 34777 162967 263000) 0 nil])
([nil nil ((#("... " 0 4 (fontified t)) . 454)) nil (25280 34777 162965 209000) 0 nil])
([nil nil ((#("rest" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 454)) nil (25280 34777 162963 176000) 0 nil])
([nil nil ((#("," 0 1 (fontified t c-type c-decl-arg-start)) . 452)) nil (25280 34777 162961 32000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 452)) nil (25280 34777 162958 767000) 0 nil])
([nil nil ((443 . 446)) nil (25280 34777 162956 673000) 0 nil])
([nil nil ((nil rear-nonsticky nil 356 . 357) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -640) (356 . 641)) nil (25280 34781 495173 407000) 0 nil])
([nil nil ((#("template<typename... Containers>
" 0 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t category c-<-as-paren-syntax) 9 17 (fontified t face font-lock-keyword-face) 17 21 (fontified t) 21 22 (fontified t face font-lock-type-face) 22 23 (fontified t face font-lock-type-face) 23 24 (fontified t face font-lock-type-face) 24 25 (fontified t face font-lock-type-face) 25 26 (fontified t face font-lock-type-face) 26 27 (fontified t face font-lock-type-face) 27 28 (fontified t face font-lock-type-face) 28 29 (fontified t face font-lock-type-face) 29 30 (fontified t face font-lock-type-face) 30 31 (fontified t face font-lock-type-face) 31 32 (fontified t category c->-as-paren-syntax) 32 33 (fontified t)) . 641) (undo-tree-id34 . -22)) nil (25280 34796 348127 409000) 0 nil] [nil nil ((#("template<typename... Containers>
std::size_t TotalContainerSize(const Containers& ...container)
{
  return  (ContainerSize(container) + ... + 0);
}
template<typename... Containers>
unsigned long  CalculateBufferSize(const Containers& ...container)
{
  return std::size(vectors)*sizeof(Container::value_type)+CalculateBufferSize(more_vectors...);
}
" 0 7 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 7 8 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 8 9 (font-lock-fontified t src-block t category c-<-as-paren-syntax fontified t) 9 17 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 17 21 (font-lock-fontified t src-block t fontified t) 21 22 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 22 23 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 23 24 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 24 25 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 25 26 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 26 27 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 27 28 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 28 29 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 29 31 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 31 32 (font-lock-fontified t src-block t category c->-as-paren-syntax fontified t) 32 33 (font-lock-fontified t src-block t fontified t) 33 35 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 35 36 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 36 38 (font-lock-fontified t src-block t fontified t) 38 43 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 43 44 (font-lock-fontified t src-block t fontified t c-type c-decl-id-start face font-lock-type-face) 44 45 (font-lock-fontified t src-block t fontified t) 45 63 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 63 64 (font-lock-fontified t src-block t fontified t c-type c-decl-arg-start) 64 69 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 69 70 (font-lock-fontified t src-block t fontified t) 70 71 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 71 72 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 72 73 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 73 74 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 74 75 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 75 76 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 76 77 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 77 78 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 78 80 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 80 82 (font-lock-fontified t src-block t fontified t) 82 83 (font-lock-fontified t src-block t fontified t) 83 84 (font-lock-fontified t src-block t fontified t) 84 85 (font-lock-fontified t src-block t fontified t) 85 86 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 86 87 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 87 88 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 88 89 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 89 90 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 90 91 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 91 92 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 92 93 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 93 94 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 94 95 (font-lock-fontified t src-block t fontified t) 95 96 (font-lock-fontified t src-block t fontified t) 96 98 (font-lock-fontified t src-block t fontified t) 98 100 (font-lock-fontified t src-block t fontified t) 100 106 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 106 133 (font-lock-fontified t src-block t fontified t) 133 134 (font-lock-fontified t src-block t fontified t) 134 141 (font-lock-fontified t src-block t fontified t) 141 146 (font-lock-fontified t src-block t fontified t) 146 147 (font-lock-fontified t src-block t fontified t) 147 148 (fontified t) 148 155 (fontified t face font-lock-keyword-face) 155 156 (fontified t face font-lock-keyword-face) 156 157 (fontified t category c-<-as-paren-syntax) 157 165 (fontified t face font-lock-keyword-face) 165 169 (fontified t) 169 170 (fontified t face font-lock-type-face) 170 171 (fontified t face font-lock-type-face) 171 172 (fontified t face font-lock-type-face) 172 173 (fontified t face font-lock-type-face) 173 174 (fontified t face font-lock-type-face) 174 175 (fontified t face font-lock-type-face) 175 176 (fontified t face font-lock-type-face) 176 177 (fontified t face font-lock-type-face) 177 178 (fontified t face font-lock-type-face) 178 179 (fontified t face font-lock-type-face) 179 180 (fontified t category c->-as-paren-syntax) 180 181 (fontified t) 181 189 (fontified t face font-lock-type-face) 189 190 (fontified t) 190 193 (fontified t face font-lock-type-face) 193 194 (fontified t c-type c-decl-id-start face font-lock-type-face) 194 196 (fontified t) 196 215 (fontified t face font-lock-function-name-face) 215 216 (fontified t c-type c-decl-arg-start) 216 221 (fontified t face font-lock-keyword-face) 221 222 (fontified t) 222 223 (fontified t face font-lock-type-face) 223 224 (fontified t face font-lock-type-face) 224 225 (fontified t face font-lock-type-face) 225 226 (fontified t face font-lock-type-face) 226 227 (fontified t face font-lock-type-face) 227 228 (fontified t face font-lock-type-face) 228 229 (fontified t face font-lock-type-face) 229 230 (fontified t face font-lock-type-face) 230 231 (fontified t face font-lock-type-face) 231 232 (fontified t face font-lock-type-face) 232 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t face font-lock-variable-name-face) 238 239 (fontified t face font-lock-variable-name-face) 239 240 (fontified t face font-lock-variable-name-face) 240 241 (fontified t face font-lock-variable-name-face) 241 242 (fontified t face font-lock-variable-name-face) 242 243 (fontified t face font-lock-variable-name-face) 243 244 (fontified t face font-lock-variable-name-face) 244 245 (fontified t face font-lock-variable-name-face) 245 246 (fontified t face font-lock-variable-name-face) 246 247 (fontified t) 247 248 (fontified t) 248 250 (fontified t) 250 252 (fontified t) 252 258 (fontified t face font-lock-keyword-face) 258 259 (fontified t) 259 260 (fontified t face font-lock-constant-face) 260 261 (fontified t face font-lock-constant-face) 261 262 (fontified t face font-lock-constant-face) 262 263 (fontified t) 263 264 (fontified t) 264 265 (fontified t) 265 266 (fontified t) 266 267 (fontified t) 267 268 (fontified t) 268 269 (fontified t) 269 276 (fontified t) 276 277 (fontified t) 277 278 (fontified t) 278 284 (fontified t face font-lock-keyword-face) 284 285 (fontified t) 285 286 (fontified t face font-lock-constant-face) 286 287 (fontified t face font-lock-constant-face) 287 288 (fontified t face font-lock-constant-face) 288 289 (fontified t face font-lock-constant-face) 289 290 (fontified t face font-lock-constant-face) 290 291 (fontified t face font-lock-constant-face) 291 292 (fontified t face font-lock-constant-face) 292 293 (fontified t face font-lock-constant-face) 293 294 (fontified t face font-lock-constant-face) 294 295 (fontified t) 295 296 (fontified t) 296 297 (fontified t) 297 298 (fontified t) 298 299 (fontified t) 299 300 (fontified t) 300 301 (fontified t) 301 302 (fontified t) 302 303 (fontified t) 303 304 (fontified t) 304 305 (fontified t) 305 306 (fontified t) 306 307 (fontified t) 307 346 (fontified t) 346 348 (fontified t)) . 493) (undo-tree-id10 . 111) (undo-tree-id11 . -147) (undo-tree-id12 . -147) (undo-tree-id13 . -170)) ((493 . 841)) (25280 34780 818258 119000) 0 nil])
([nil nil ((#("unsigned long  CalculateBufferSize(const Containers& ...container)
" 0 8 (fontified t face font-lock-type-face) 8 9 (fontified t) 9 12 (fontified t face font-lock-type-face) 12 13 (fontified t c-type c-decl-id-start face font-lock-type-face) 13 15 (fontified t) 15 34 (fontified t face font-lock-function-name-face) 34 35 (fontified t c-type c-decl-arg-start) 35 40 (fontified t face font-lock-keyword-face) 40 41 (fontified t) 41 42 (fontified t face font-lock-type-face) 42 43 (fontified t face font-lock-type-face) 43 44 (fontified t face font-lock-type-face) 44 45 (fontified t face font-lock-type-face) 45 46 (fontified t face font-lock-type-face) 46 47 (fontified t face font-lock-type-face) 47 48 (fontified t face font-lock-type-face) 48 49 (fontified t face font-lock-type-face) 49 50 (fontified t face font-lock-type-face) 50 51 (fontified t face font-lock-type-face) 51 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t face font-lock-variable-name-face) 57 58 (fontified t face font-lock-variable-name-face) 58 59 (fontified t face font-lock-variable-name-face) 59 60 (fontified t face font-lock-variable-name-face) 60 61 (fontified t face font-lock-variable-name-face) 61 62 (fontified t face font-lock-variable-name-face) 62 63 (fontified t face font-lock-variable-name-face) 63 64 (fontified t face font-lock-variable-name-face) 64 65 (fontified t face font-lock-variable-name-face) 65 66 (fontified t) 66 67 (fontified t)) . 641)) nil (25280 34796 348122 219000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 493) (undo-tree-id9 . 1)) ((493 . 494)) (25280 34780 653978 358000) 0 nil])
([nil nil ((#("{
" 0 2 (fontified t)) . 641)) nil (25280 34796 348119 344000) 0 nil])
([nil nil ((#("C" 0 1 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face)) . 390)) ((390 . 391)) (25280 34780 329025 834000) 0 nil])
([nil nil ((#("  return std::size(vectors)*sizeof(Container::value_type)+CalculateBufferSize(more_vectors...);
" 0 2 (fontified t) 2 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 10 (fontified t face font-lock-constant-face) 10 11 (fontified t face font-lock-constant-face) 11 12 (fontified t face font-lock-constant-face) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 34 (fontified t face font-lock-keyword-face) 34 35 (fontified t) 35 36 (fontified t face font-lock-constant-face) 36 37 (fontified t face font-lock-constant-face) 37 38 (fontified t face font-lock-constant-face) 38 39 (fontified t face font-lock-constant-face) 39 40 (fontified t face font-lock-constant-face) 40 41 (fontified t face font-lock-constant-face) 41 42 (fontified t face font-lock-constant-face) 42 43 (fontified t face font-lock-constant-face) 43 44 (fontified t face font-lock-constant-face) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 96 (fontified t)) . 641)) nil (25280 34796 348116 559000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face)) . 390)) ((390 . 391)) (25280 34779 909278 109000) 0 nil])
([nil nil ((#("}
" 0 2 (fontified t)) . 641)) nil (25280 34796 350504 937000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face)) . 390)) ((390 . 391)) (25280 34779 556992 642000) 0 nil])
([nil nil ((#("template<typename C>
std::size_t ContainerSize(const C& container)
{
  return std::size(container) * sizeof(typename C::value_type);
}

template<typename... Containers>
std::size_t TotalContainerSize(const Containers& ...container)
{
  return  (ContainerSize(container) + ... + 0);
}
" 0 7 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 7 8 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 8 9 (font-lock-fontified t src-block t fontified t category c-<-as-paren-syntax) 9 17 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 17 18 (font-lock-fontified t src-block t fontified t) 18 19 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 19 20 (font-lock-fontified t src-block t fontified t category c->-as-paren-syntax) 20 21 (font-lock-fontified t src-block t fontified t) 21 23 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 23 24 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 24 26 (font-lock-fontified t src-block t fontified t) 26 31 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 31 32 (font-lock-fontified t src-block t fontified t c-type c-decl-id-start face font-lock-type-face) 32 33 (font-lock-fontified t src-block t fontified t) 33 34 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 34 35 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 35 36 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 36 37 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 37 38 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 38 39 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 39 40 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 40 41 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 41 42 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 42 45 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 45 46 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 46 47 (font-lock-fontified t src-block t fontified t c-type c-decl-arg-start) 47 52 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 52 53 (font-lock-fontified t src-block t fontified t) 53 54 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 54 56 (font-lock-fontified t src-block t fontified t) 56 65 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 65 66 (font-lock-fontified t src-block t fontified t) 66 71 (font-lock-fontified t src-block t fontified t) 71 77 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 77 78 (font-lock-fontified t src-block t fontified t) 78 81 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 81 101 (font-lock-fontified t src-block t fontified t) 101 107 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 107 108 (font-lock-fontified t src-block t fontified t) 108 116 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 116 117 (font-lock-fontified t src-block t fontified t) 117 118 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 118 120 (font-lock-fontified t src-block t fontified t) 120 130 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 130 132 (font-lock-fontified t src-block t fontified t) 132 134 (font-lock-fontified t src-block t fontified t) 134 136 (font-lock-fontified t src-block t fontified t) 136 143 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 143 144 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 144 145 (font-lock-fontified t src-block t fontified t category c-<-as-paren-syntax) 145 153 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 153 157 (font-lock-fontified t src-block t fontified t) 157 158 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 158 159 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 159 160 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 160 161 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 161 162 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 162 163 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 163 164 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 164 165 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 165 167 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 167 168 (font-lock-fontified t src-block t fontified t category c->-as-paren-syntax) 168 169 (font-lock-fontified t src-block t fontified t) 169 171 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 171 172 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 172 174 (font-lock-fontified t src-block t fontified t) 174 179 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 179 180 (font-lock-fontified t src-block t fontified t c-type c-decl-id-start face font-lock-type-face) 180 181 (font-lock-fontified t src-block t fontified t) 181 199 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 199 200 (font-lock-fontified t src-block t fontified t c-type c-decl-arg-start) 200 205 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 205 206 (font-lock-fontified t src-block t fontified t) 206 207 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 207 208 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 208 209 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 209 210 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 210 211 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 211 212 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 212 213 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 213 214 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 214 216 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 216 218 (font-lock-fontified t src-block t fontified t) 218 219 (font-lock-fontified t src-block t fontified t) 219 220 (font-lock-fontified t src-block t fontified t) 220 221 (font-lock-fontified t src-block t fontified t) 221 222 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 222 223 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 223 224 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 224 225 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 225 226 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 226 227 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 227 228 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 228 229 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 229 230 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 230 231 (font-lock-fontified t src-block t fontified t) 231 232 (font-lock-fontified t src-block t fontified t) 232 234 (font-lock-fontified t src-block t fontified t) 234 236 (font-lock-fontified t src-block t fontified t) 236 242 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 242 269 (font-lock-fontified t src-block t fontified t) 269 270 (font-lock-fontified t src-block t fontified t) 270 277 (font-lock-fontified t src-block t fontified t) 277 282 (font-lock-fontified t src-block t fontified t) 282 283 (font-lock-fontified t src-block t fontified t) 283 284 (fontified t)) . 357) (undo-tree-id36 . 242) (undo-tree-id37 . -283) (undo-tree-id38 . -283) (undo-tree-id39 . -284)) nil (25280 34872 427490 258000) 0 nil] [nil nil ((#("template<typename C>
std::size_t ContainerSize(const C& container)
{
  return std::size(container) * sizeof(typename C::value_type);
}

template<typename... Containers>
std::size_t TotalContainerSize(const Containers& ...container)
{
  return  (ContainerSize(container) + ... + 0);
" 0 7 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 7 8 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 8 9 (font-lock-fontified t src-block t category c-<-as-paren-syntax fontified t) 9 17 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 17 18 (font-lock-fontified t src-block t fontified t) 18 19 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 19 20 (font-lock-fontified t src-block t category c->-as-paren-syntax fontified t) 20 21 (font-lock-fontified t src-block t fontified t) 21 23 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 23 24 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 24 26 (font-lock-fontified t src-block t fontified t) 26 31 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 31 32 (font-lock-fontified t src-block t fontified t c-type c-decl-id-start face font-lock-type-face) 32 33 (font-lock-fontified t src-block t fontified t) 33 34 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 34 35 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 35 36 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 36 37 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 37 38 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 38 39 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 39 40 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 40 41 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 41 42 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 42 45 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 45 46 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 46 47 (font-lock-fontified t src-block t fontified t c-type c-decl-arg-start) 47 52 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 52 53 (font-lock-fontified t src-block t fontified t) 53 54 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 54 56 (font-lock-fontified t src-block t fontified t) 56 65 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 65 66 (font-lock-fontified t src-block t fontified t) 66 71 (font-lock-fontified t src-block t fontified t) 71 77 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 77 78 (font-lock-fontified t src-block t fontified t) 78 81 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 81 101 (font-lock-fontified t src-block t fontified t) 101 107 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 107 108 (font-lock-fontified t src-block t fontified t) 108 116 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 116 117 (font-lock-fontified t src-block t fontified t) 117 118 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 118 120 (font-lock-fontified t src-block t fontified t) 120 130 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 130 132 (font-lock-fontified t src-block t fontified t) 132 134 (font-lock-fontified t src-block t fontified t) 134 136 (font-lock-fontified t src-block t fontified t) 136 143 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 143 144 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 144 145 (font-lock-fontified t src-block t fontified t category c-<-as-paren-syntax) 145 153 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 153 157 (font-lock-fontified t src-block t fontified t) 157 158 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 158 159 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 159 160 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 160 161 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 161 162 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 162 163 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 163 164 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 164 165 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 165 167 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 167 168 (font-lock-fontified t src-block t fontified t category c->-as-paren-syntax) 168 169 (font-lock-fontified t src-block t fontified t) 169 171 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 171 172 (font-lock-fontified t src-block t fontified t face font-lock-constant-face) 172 174 (font-lock-fontified t src-block t fontified t) 174 179 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 179 180 (font-lock-fontified t src-block t fontified t c-type c-decl-id-start face font-lock-type-face) 180 181 (font-lock-fontified t src-block t fontified t) 181 199 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 199 200 (font-lock-fontified t src-block t fontified t c-type c-decl-arg-start) 200 205 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 205 206 (font-lock-fontified t src-block t fontified t) 206 207 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 207 208 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 208 209 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 209 210 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 210 211 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 211 212 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 212 213 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 213 214 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 214 216 (font-lock-fontified t src-block t fontified t face font-lock-type-face) 216 218 (font-lock-fontified t src-block t fontified t) 218 219 (font-lock-fontified t src-block t fontified t) 219 220 (font-lock-fontified t src-block t fontified t) 220 221 (font-lock-fontified t src-block t fontified t) 221 222 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 222 223 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 223 224 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 224 225 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 225 226 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 226 227 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 227 228 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 228 229 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 229 230 (font-lock-fontified t src-block t fontified t face font-lock-variable-name-face) 230 231 (font-lock-fontified t src-block t fontified t) 231 232 (font-lock-fontified t src-block t fontified t) 232 234 (font-lock-fontified t src-block t fontified t) 234 236 (font-lock-fontified t src-block t fontified t) 236 242 (font-lock-fontified t src-block t fontified t face font-lock-keyword-face) 242 269 (font-lock-fontified t src-block t fontified t) 269 270 (font-lock-fontified t src-block t fontified t) 270 277 (font-lock-fontified t src-block t fontified t) 277 282 (font-lock-fontified t src-block t fontified t)) . 357) (undo-tree-id33 . 240)) ((357 . 639)) (25280 34796 348102 503000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face)) . 390)) ((390 . 391)) (25280 34779 208339 169000) 0 nil])
([nil nil ((854 . 858) (#(" " 0 1 (fontified nil)) . 854) (#("   " 0 2 (fontified nil) 2 3 (fontified nil)) . 853) (undo-tree-id35 . -3) (856 . 857)) nil (25280 34872 428293 481000) 0 nil])
nil
([nil nil ((#("a" 0 1 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face)) . 390)) ((390 . 391)) (25280 34778 990142 521000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1788 . 1789) (nil fontified nil 1693 . 1789) (1693 . 1789)) nil (25280 35023 164531 581000) 0 nil] [nil nil ((nil rear-nonsticky nil 1788 . 1789) (nil fontified nil 1693 . 1789) (1693 . 1789)) ((#("glBufferData(GL_ARRAY_BUFFER, sizeof(position)+sizeof(normal)+sizeof(uv), NULL, GL_STATIC_DRAW);" 0 30 (fontified nil) 30 36 (fontified nil face font-lock-keyword-face) 36 47 (fontified nil) 47 53 (fontified nil face font-lock-keyword-face) 53 62 (fontified nil) 62 68 (fontified nil face font-lock-keyword-face) 68 74 (fontified nil) 74 78 (fontified nil face font-lock-constant-face) 78 95 (fontified nil) 95 96 (fontified nil rear-nonsticky nil)) . 1693) (undo-tree-id40 . -95) (undo-tree-id41 . -95) (undo-tree-id42 . -95) (nil rear-nonsticky t 1788 . 1789)) (25280 34872 427466 895000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-fontified t src-block t fontified nil face font-lock-function-name-face)) . 390)) ((390 . 391)) (25280 34778 621251 518000) 0 nil])
([nil nil ((1790 . 1793) (#(" " 0 1 (fontified nil)) . 1790) (1789 . 1790)) nil (25280 35023 164528 165000) 0 nil])
nil
([nil nil ((#("n" 0 1 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face)) . 390)) ((390 . 391)) (25280 34778 188599 633000) 0 nil])
([nil nil ((1693 . 1694)) nil (25280 35023 164525 490000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face)) . 390)) ((390 . 391)) (25280 34777 717509 418000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-keyword-face)) . 1724)) nil (25280 35023 164523 586000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face)) . 390)) ((390 . 391)) (25280 34777 165474 353000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1724)) nil (25280 35023 164521 282000) 0 nil])
([nil nil ((390 . 396)) ((#("Buffer" 0 1 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 1 2 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 2 3 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 3 4 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 4 5 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face) 5 6 (font-lock-fontified t src-block t fontified t face font-lock-function-name-face)) . 390) (undo-tree-id31 . -5) (undo-tree-id32 . -5)) (25280 34777 162891 522000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . 1724)) nil (25280 35023 164518 937000) 0 nil])
nil
([nil nil ((#("e" 0 1 (fontified t)) . 1724)) nil (25280 35023 164517 144000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 1724)) nil (25280 35023 164515 120000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 1724)) nil (25280 35023 164513 217000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1724)) nil (25280 35023 164511 53000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 1724)) nil (25280 35023 164487 769000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 1724)) nil (25280 35023 164486 46000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 1724)) nil (25280 35023 164484 272000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1724)) nil (25280 35023 164482 489000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 1724)) nil (25280 35023 164480 716000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1724)) nil (25280 35023 164479 43000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 1724)) nil (25280 35023 164477 329000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 1724)) nil (25280 35023 164475 656000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1724)) nil (25280 35023 164473 863000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . 1724)) nil (25280 35023 164472 80000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-keyword-face)) . 1724)) nil (25280 35023 164470 356000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1724)) nil (25280 35023 164468 653000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . 1724)) nil (25280 35023 164466 940000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1724)) nil (25280 35023 164465 87000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 1724)) nil (25280 35023 164463 303000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 1724)) nil (25280 35023 164461 370000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1724)) nil (25280 35023 164459 396000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 1724)) nil (25280 35023 164457 663000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 1724)) nil (25280 35023 164455 819000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 1724)) nil (25280 35023 164453 866000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 1724)) nil (25280 35023 164451 972000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 1724)) nil (25280 35023 164450 99000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 1724)) nil (25280 35023 164448 425000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1724)) nil (25280 35023 164446 542000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . 1724)) nil (25280 35023 164444 668000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-keyword-face)) . 1724)) nil (25280 35023 164442 815000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1724)) nil (25280 35023 164441 42000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . 1724)) nil (25280 35023 164439 258000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1724)) nil (25280 35023 164437 385000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 1724)) nil (25280 35023 164435 481000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 1724)) nil (25280 35023 164433 618000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1724)) nil (25280 35023 164431 614000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . 1724)) nil (25280 35023 164429 630000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . 1724)) nil (25280 35023 164427 406000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1724)) nil (25280 35023 164425 322000) 0 nil])
([nil nil ((nil fontified t 1748 . 1749) (nil fontified t 1747 . 1748) (nil fontified t 1746 . 1747) (nil fontified t 1745 . 1746) (nil fontified t 1744 . 1745) (#("Total" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1731) (1736 . 1754) 1736 (1731 . 1736) (#("C" 0 1 (fontified t)) . -1731) (undo-tree-id59 . -1) 1732 (1731 . 1732) (1729 . 1731) (1724 . 1729)) nil (25280 35023 164421 415000) 0 nil])
([nil nil ((1745 . 1746)) nil (25280 35023 164413 19000) 0 nil])
([nil nil ((1761 . 1762) (1751 . 1761) (1750 . 1751)) nil (25280 35023 164411 86000) 0 nil])
([nil nil ((#("GL" 0 2 (fontified t)) . 1770)) nil (25280 35023 164408 451000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 1770)) nil (25280 35023 164406 737000) 0 nil])
([nil nil ((#("STATIC" 0 6 (fontified t)) . 1770)) nil (25280 35023 164404 904000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 1770)) nil (25280 35023 164395 146000) 0 nil])
([nil nil ((#("DRAW" 0 4 (fontified t)) . 1770)) nil (25280 35023 164393 352000) 0 nil])
([nil nil ((1770 . 1776)) nil (25280 35023 164391 759000) 0 nil])
([nil nil ((#(", " 0 1 (fontified t) 1 2 (fontified t)) . 1811)) nil (25280 35023 164390 96000) 0 nil])
([nil nil ((#("method" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 1811)) nil (25280 35023 164388 103000) 0 nil])
([nil nil ((#("DrawMethod " 0 10 (fontified t face font-lock-type-face) 10 11 (fontified t)) . 536)) nil (25280 35023 164386 449000) 0 nil])
([nil nil ((#("method " 0 6 (fontified t) 6 7 (fontified t)) . 536)) nil (25280 35023 164384 756000) 0 nil])
([nil nil ((#("= " 0 2 (fontified t)) . 536)) nil (25280 35023 164382 873000) 0 nil])
([nil nil ((#("DrawMethod" 0 10 (fontified t face font-lock-constant-face)) . 536)) nil (25280 35023 164380 759000) 0 nil])
([nil nil ((#("::" 0 2 (fontified t)) . 536)) nil (25280 35023 164378 865000) 0 nil])
([nil nil ((#("Static" 0 6 (fontified t)) . 536)) nil (25280 35023 164376 811000) 0 nil])
([nil nil ((#("," 0 1 (fontified t c-type c-decl-arg-start)) . 534)) nil (25280 35023 164373 876000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 534) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1)) nil (25280 35023 164363 827000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 357) (t 25280 35023 223301 78000)) nil (25280 35056 149838 145000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 356) (undo-tree-id63 . -1)) nil (25280 35056 149836 622000) 0 nil])
([nil nil ((84 . 86) (78 . 84) (77 . 78) (nil fontified t 76 . 77) (nil c-in-sws t 76 . 77) (nil face font-lock-string-face 76 . 77) (nil fontified t 75 . 76) (nil c-in-sws t 75 . 76) (nil face font-lock-string-face 75 . 76) (nil fontified t 74 . 75) (nil c-in-sws t 74 . 75) (nil face font-lock-string-face 74 . 75) (#("too" 0 1 (fontified t c-in-sws t face font-lock-string-face) 1 2 (fontified t c-in-sws t face font-lock-string-face) 2 3 (fontified t c-in-sws t face font-lock-string-face)) . -72) (75 . 80) 75 (72 . 75) (71 . 72) (69 . 71) (#("/" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . -69) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 70 (69 . 70) (68 . 69) (60 . 68) (59 . 60)) nil (25280 35056 149833 115000) 0 nil])
([nil nil ((68 . 69) (nil syntax-table nil 85 . 86) (nil syntax-table (1) 84 . 85) (#("<" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . 68) (nil syntax-table nil 86 . 87) (nil syntax-table (1) 85 . 86)) nil (25280 35056 149810 52000) 0 nil])
([nil nil ((109 . 110) 118 (t 25280 35056 162552 898000)) nil (25280 35107 671811 491000) 0 nil])
([nil nil ((#("  DrawMethod method_;
" 0 2 (fontified t) 2 11 (fontified t face font-lock-type-face) 11 12 (fontified t c-type c-decl-id-start face font-lock-type-face) 12 13 (fontified t) 13 20 (fontified t face font-lock-variable-name-face) 20 22 (fontified t)) . 356)) nil (25280 35107 671806 832000) 0 nil])
([nil nil ((#("    auto method =  attributes_[index].method_;
" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 8 9 (fontified t) 9 12 (fontified t face font-lock-variable-name-face) 12 15 (fontified t face font-lock-variable-name-face) 15 17 (fontified t) 17 47 (fontified t)) . 1306) (undo-tree-id64 . -38) (undo-tree-id65 . -38) (undo-tree-id66 . -45) (undo-tree-id67 . -38) (undo-tree-id68 . -38) (undo-tree-id69 . -38) 1344) nil (25280 35107 671796 743000) 0 nil])
([nil nil ((#("method" 0 3 (fontified t) 3 6 (fontified t)) . 1123) (undo-tree-id78 . -6) (undo-tree-id79 . -6) (t 25280 35107 687382 572000)) nil (25280 35162 489124 798000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 1121)) nil (25280 35162 489116 633000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1121) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1)) nil (25280 35162 489106 73000) 0 nil])
([nil nil ((1670 . 1673) (t 25280 35162 550136 422000)) nil (25280 35213 316731 805000) 0 nil])
([nil nil ((1704 . 1705) (1687 . 1704) (1685 . 1687) (1682 . 1685) (t 25280 35213 331982 967000)) nil (25280 35322 846053 242000) 0 nil])
([nil nil ((1711 . 1712)) nil (25280 35326 525477 175000) 0 nil])
([nil nil ((#("std" 0 1 (fontified t face font-lock-constant-face) 1 2 (fontified t face font-lock-constant-face) 2 3 (fontified t face font-lock-constant-face)) . 1682) (t 25280 35322 861495 134000)) nil (25280 35483 17777 991000) 0 nil] [nil nil ((apply -34 1377 1749 undo--wrap-and-run-primitive-undo 1377 1749 ((1623 . 1626) (1579 . 1582) (1547 . 1550) (1516 . 1519) (1480 . 1483) (1472 . 1475) (1417 . 1420) (1390 . 1393) (1379 . 1382) (1712 . 1719))) (t 25280 35322 861495 134000)) ((apply 34 1377 1715 undo--wrap-and-run-primitive-undo 1377 1715 ((#("
      " 0 1 (fontified t face font-lock-comment-face c-in-sws t) 1 7 (fontified t c-in-sws t)) . 1712) (#<marker (moves after insertion) at 1710 in buffer.h> . 7) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 1 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . 1379) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . 1390) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . 1417) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . 1472) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . 1480) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . 1516) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . 1547) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . 1579) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . 1623) 1738))) (25280 35326 521602 566000) 0 nil])
([nil nil ((#("::" 0 1 (fontified t) 1 2 (fontified t)) . 1682)) nil (25280 35483 17775 887000) 0 nil])
nil
([nil nil ((#("underlying" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t face font-lock-type-face) 6 7 (fontified t face font-lock-type-face) 7 8 (fontified t face font-lock-type-face) 8 9 (fontified t face font-lock-type-face) 9 10 (fontified t face font-lock-type-face)) . 1682)) nil (25280 35483 17774 334000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1681)) nil (25280 35483 17772 751000) 0 nil])
([nil nil ((#("type" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face)) . 1682)) nil (25280 35483 17771 188000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-type-face)) . 1682)) nil (25280 35483 17769 365000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-type-face)) . 1682)) nil (25280 35483 17767 521000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1681) (undo-tree-id83 . -1) 1682 (1681 . 1682) (#(" " 0 1 (fontified t)) . -1681) (undo-tree-id84 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -1682) (undo-tree-id85 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -1683) (undo-tree-id86 . -1) (#("d" 0 1 (fontified t face font-lock-type-face)) . -1684) (undo-tree-id87 . -1) 1685 (1681 . 1685) (#("_" 0 1 (fontified t face font-lock-type-face)) . -1681) (undo-tree-id88 . 1) (undo-tree-id89 . -1) (#(" " 0 1 (fontified t)) . -1682) (undo-tree-id90 . -1) 1683 (1682 . 1683)) nil (25280 35483 17762 842000) 0 nil])
([nil nil ((1684 . 1685) (1681 . 1684)) nil (25280 35483 17747 193000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 1684)) nil (25280 35483 17744 508000) 0 nil])
([nil nil ((1701 . 1702) (#("<" 0 1 (fontified t)) . -1701) (undo-tree-id81 . 1) (undo-tree-id82 . -1) 1702 (1700 . 1701) (1696 . 1700) (1694 . 1696) (1693 . 1694) (1684 . 1693)) nil (25280 35483 17741 122000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 1708) (undo-tree-id80 . -1)) nil (25280 35483 17731 744000) 0 nil])
([nil nil ((1709 . 1710)) nil (25280 35483 17710 855000) 0 nil])
([nil current ((1709 . 1710) (1708 . 1709) (#("l" 0 1 (fontified t)) . -1708) (undo-tree-id91 . -1) 1709 (1708 . 1709) (#("))" 0 1 (fontified t) 1 2 (fontified t)) . -1708) (undo-tree-id92 . -1) (undo-tree-id93 . -2) 1710 (t 25280 35483 78855 973000)) nil (25280 35491 69981 841000) 0 nil])
nil
